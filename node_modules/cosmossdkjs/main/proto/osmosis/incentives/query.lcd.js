"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LCDQueryClient = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _lcd = require("@osmonauts/lcd");

var _helpers = require("@osmonauts/helpers");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var LCDQueryClient = /*#__PURE__*/function (_LCDClient) {
  (0, _inherits2["default"])(LCDQueryClient, _LCDClient);

  var _super = _createSuper(LCDQueryClient);

  function LCDQueryClient(_ref) {
    var restEndpoint = _ref.restEndpoint;
    (0, _classCallCheck2["default"])(this, LCDQueryClient);
    return _super.call(this, {
      restEndpoint: restEndpoint
    });
  }
  /* returns coins that is going to be distributed */


  (0, _createClass2["default"])(LCDQueryClient, [{
    key: "moduleToDistributeCoins",
    value: function () {
      var _moduleToDistributeCoins = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
        var _params,
            endpoint,
            _args = arguments;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                endpoint = "osmosis/incentives/v1beta1/module_to_distribute_coins";
                _context.next = 4;
                return this.request(endpoint);

              case 4:
                return _context.abrupt("return", _context.sent);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function moduleToDistributeCoins() {
        return _moduleToDistributeCoins.apply(this, arguments);
      }

      return moduleToDistributeCoins;
    }()
    /* returns coins that are distributed by module so far */

  }, {
    key: "moduleDistributedCoins",
    value: function () {
      var _moduleDistributedCoins = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
        var _params,
            endpoint,
            _args2 = arguments;

        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _params = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};
                endpoint = "osmosis/incentives/v1beta1/module_distributed_coins";
                _context2.next = 4;
                return this.request(endpoint);

              case 4:
                return _context2.abrupt("return", _context2.sent);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function moduleDistributedCoins() {
        return _moduleDistributedCoins.apply(this, arguments);
      }

      return moduleDistributedCoins;
    }()
    /* returns Gauge by id */

  }, {
    key: "gaugeByID",
    value: function () {
      var _gaugeByID = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(params) {
        var endpoint;
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                endpoint = "osmosis/incentives/v1beta1/gauge_by_id/".concat(params.id);
                _context3.next = 3;
                return this.request(endpoint);

              case 3:
                return _context3.abrupt("return", _context3.sent);

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function gaugeByID(_x) {
        return _gaugeByID.apply(this, arguments);
      }

      return gaugeByID;
    }()
    /* returns gauges both upcoming and active */

  }, {
    key: "gauges",
    value: function () {
      var _gauges = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4() {
        var params,
            options,
            endpoint,
            _args4 = arguments;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                params = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {
                  pagination: undefined
                };
                options = {
                  params: {}
                };

                if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== "undefined") {
                  (0, _helpers.setPaginationParams)(options, params.pagination);
                }

                endpoint = "osmosis/incentives/v1beta1/gauges";
                _context4.next = 6;
                return this.request(endpoint, options);

              case 6:
                return _context4.abrupt("return", _context4.sent);

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function gauges() {
        return _gauges.apply(this, arguments);
      }

      return gauges;
    }()
    /* returns active gauges */

  }, {
    key: "activeGauges",
    value: function () {
      var _activeGauges = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5() {
        var params,
            options,
            endpoint,
            _args5 = arguments;
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                params = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {
                  pagination: undefined
                };
                options = {
                  params: {}
                };

                if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== "undefined") {
                  (0, _helpers.setPaginationParams)(options, params.pagination);
                }

                endpoint = "osmosis/incentives/v1beta1/active_gauges";
                _context5.next = 6;
                return this.request(endpoint, options);

              case 6:
                return _context5.abrupt("return", _context5.sent);

              case 7:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function activeGauges() {
        return _activeGauges.apply(this, arguments);
      }

      return activeGauges;
    }()
    /* returns active gauges per denom */

  }, {
    key: "activeGaugesPerDenom",
    value: function () {
      var _activeGaugesPerDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(params) {
        var options, endpoint;
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                options = {
                  params: {}
                };

                if (typeof (params === null || params === void 0 ? void 0 : params.denom) !== "undefined") {
                  options.params.denom = params.denom;
                }

                if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== "undefined") {
                  (0, _helpers.setPaginationParams)(options, params.pagination);
                }

                endpoint = "osmosis/incentives/v1beta1/active_gauges_per_denom";
                _context6.next = 6;
                return this.request(endpoint, options);

              case 6:
                return _context6.abrupt("return", _context6.sent);

              case 7:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function activeGaugesPerDenom(_x2) {
        return _activeGaugesPerDenom.apply(this, arguments);
      }

      return activeGaugesPerDenom;
    }()
    /* returns scheduled gauges */

  }, {
    key: "upcomingGauges",
    value: function () {
      var _upcomingGauges = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7() {
        var params,
            options,
            endpoint,
            _args7 = arguments;
        return _regenerator["default"].wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                params = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {
                  pagination: undefined
                };
                options = {
                  params: {}
                };

                if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== "undefined") {
                  (0, _helpers.setPaginationParams)(options, params.pagination);
                }

                endpoint = "osmosis/incentives/v1beta1/upcoming_gauges";
                _context7.next = 6;
                return this.request(endpoint, options);

              case 6:
                return _context7.abrupt("return", _context7.sent);

              case 7:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function upcomingGauges() {
        return _upcomingGauges.apply(this, arguments);
      }

      return upcomingGauges;
    }()
    /* returns scheduled gauges per denom */

  }, {
    key: "upcomingGaugesPerDenom",
    value: function () {
      var _upcomingGaugesPerDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(params) {
        var options, endpoint;
        return _regenerator["default"].wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                options = {
                  params: {}
                };

                if (typeof (params === null || params === void 0 ? void 0 : params.denom) !== "undefined") {
                  options.params.denom = params.denom;
                }

                if (typeof (params === null || params === void 0 ? void 0 : params.pagination) !== "undefined") {
                  (0, _helpers.setPaginationParams)(options, params.pagination);
                }

                endpoint = "osmosis/incentives/v1beta1/upcoming_gauges_per_denom";
                _context8.next = 6;
                return this.request(endpoint, options);

              case 6:
                return _context8.abrupt("return", _context8.sent);

              case 7:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function upcomingGaugesPerDenom(_x3) {
        return _upcomingGaugesPerDenom.apply(this, arguments);
      }

      return upcomingGaugesPerDenom;
    }()
    /* RewardsEst returns an estimate of the rewards at a future specific time.
    The querier either provides an address or a set of locks
    for which they want to find the associated rewards. */

  }, {
    key: "rewardsEst",
    value: function () {
      var _rewardsEst = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(params) {
        var options, endpoint;
        return _regenerator["default"].wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                options = {
                  params: {}
                };

                if (typeof (params === null || params === void 0 ? void 0 : params.lockIds) !== "undefined") {
                  options.params.lock_ids = params.lockIds;
                }

                if (typeof (params === null || params === void 0 ? void 0 : params.endEpoch) !== "undefined") {
                  options.params.end_epoch = params.endEpoch;
                }

                endpoint = "osmosis/incentives/v1beta1/rewards_est/".concat(params.owner);
                _context9.next = 6;
                return this.request(endpoint, options);

              case 6:
                return _context9.abrupt("return", _context9.sent);

              case 7:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function rewardsEst(_x4) {
        return _rewardsEst.apply(this, arguments);
      }

      return rewardsEst;
    }()
    /* returns lockable durations that are valid to give incentives */

  }, {
    key: "lockableDurations",
    value: function () {
      var _lockableDurations = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10() {
        var _params,
            endpoint,
            _args10 = arguments;

        return _regenerator["default"].wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _params = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {};
                endpoint = "osmosis/incentives/v1beta1/lockable_durations";
                _context10.next = 4;
                return this.request(endpoint);

              case 4:
                return _context10.abrupt("return", _context10.sent);

              case 5:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function lockableDurations() {
        return _lockableDurations.apply(this, arguments);
      }

      return lockableDurations;
    }()
  }]);
  return LCDQueryClient;
}(_lcd.LCDClient);

exports.LCDQueryClient = LCDQueryClient;
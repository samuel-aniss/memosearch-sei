"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.find_code_id_from_contract_hash = find_code_id_from_contract_hash;
exports.make_clearAdmin_msg = make_clearAdmin_msg;
exports.make_executeContract_msg = make_executeContract_msg;
exports.make_instantiateContract_msg = make_instantiateContract_msg;
exports.make_migrateContract_msg = make_migrateContract_msg;
exports.make_storeCode_msg = make_storeCode_msg;
exports.make_updateAdmin_msg = make_updateAdmin_msg;
exports.query_wasm_allContractState = query_wasm_allContractState;
exports.query_wasm_code = query_wasm_code;
exports.query_wasm_codes = query_wasm_codes;
exports.query_wasm_contractHistory = query_wasm_contractHistory;
exports.query_wasm_contractInfo = query_wasm_contractInfo;
exports.query_wasm_contractsByCode = query_wasm_contractsByCode;
exports.query_wasm_pinnedCodes = query_wasm_pinnedCodes;
exports.query_wasm_rawContractState = query_wasm_rawContractState;
exports.query_wasm_smartContractState = query_wasm_smartContractState;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../proto");

// Supported query interfaces - types/proto/cosmwasm/wasm/v1/query.rpc.query.d.ts
// Supported transaction interfaces - types/proto/cosmwasm/wasm/v1/tx.rpc.query.d.ts
//---------------------------------------------
// COSMWASM::WASM MODULE - QUERY HELPERS
// --------------------------------------------
// ContractInfo gets the contract meta data
function query_wasm_contractInfo(_x, _x2) {
  return _query_wasm_contractInfo.apply(this, arguments);
}

function _query_wasm_contractInfo() {
  _query_wasm_contractInfo = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, contract_addr) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.cosmwasm.wasm.v1.contractInfo(_proto.cosmwasm.wasm.v1.QueryContractInfoRequest.fromPartial({
              address: contract_addr
            }));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_wasm_contractInfo.apply(this, arguments);
}

function query_wasm_contractHistory(_x3, _x4) {
  return _query_wasm_contractHistory.apply(this, arguments);
} // ContractsByCode lists all smart contracts for a code id


function _query_wasm_contractHistory() {
  _query_wasm_contractHistory = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, contract_addr) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.cosmwasm.wasm.v1.contractHistory(_proto.cosmwasm.wasm.v1.QueryContractHistoryRequest.fromPartial({
              address: contract_addr
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_wasm_contractHistory.apply(this, arguments);
}

function query_wasm_contractsByCode(_x5, _x6, _x7, _x8) {
  return _query_wasm_contractsByCode.apply(this, arguments);
} // AllContractState gets all raw store data for a single contract


function _query_wasm_contractsByCode() {
  _query_wasm_contractsByCode = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, codeId, offset, limit) {
    var codes;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.cosmwasm.wasm.v1.contractsByCode(_proto.cosmwasm.wasm.v1.QueryContractsByCodeRequest.fromPartial({
              codeId: codeId,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            codes = _context3.sent;
            return _context3.abrupt("return", codes);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_wasm_contractsByCode.apply(this, arguments);
}

function query_wasm_allContractState(_x9, _x10, _x11, _x12) {
  return _query_wasm_allContractState.apply(this, arguments);
} // RawContractState gets single key from the raw store data of a contract


function _query_wasm_allContractState() {
  _query_wasm_allContractState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, address, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.cosmwasm.wasm.v1.allContractState(_proto.cosmwasm.wasm.v1.QueryAllContractStateRequest.fromPartial({
              address: address,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_wasm_allContractState.apply(this, arguments);
}

function query_wasm_rawContractState(_x13, _x14, _x15) {
  return _query_wasm_rawContractState.apply(this, arguments);
} // SmartContractState get smart query result from the contract


function _query_wasm_rawContractState() {
  _query_wasm_rawContractState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client, address, queryData) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.cosmwasm.wasm.v1.rawContractState(_proto.cosmwasm.wasm.v1.QueryRawContractStateRequest.fromPartial({
              address: address,
              queryData: queryData
            }));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_wasm_rawContractState.apply(this, arguments);
}

function query_wasm_smartContractState(_x16, _x17, _x18) {
  return _query_wasm_smartContractState.apply(this, arguments);
} // Code gets the binary code and metadata for a singe wasm code


function _query_wasm_smartContractState() {
  _query_wasm_smartContractState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client, address, queryData) {
    var response;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return client.query.cosmwasm.wasm.v1.smartContractState(_proto.cosmwasm.wasm.v1.QuerySmartContractStateRequest.fromPartial({
              address: address,
              queryData: queryData
            }));

          case 2:
            response = _context6.sent;
            return _context6.abrupt("return", response);

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _query_wasm_smartContractState.apply(this, arguments);
}

function query_wasm_code(_x19, _x20) {
  return _query_wasm_code.apply(this, arguments);
} // Code gets the binary code and metadata for a singe wasm code


function _query_wasm_code() {
  _query_wasm_code = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client, code_id) {
    var response;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return client.query.cosmwasm.wasm.v1.code(_proto.cosmwasm.wasm.v1.QueryCodeRequest.fromPartial({
              codeId: code_id
            }));

          case 2:
            response = _context7.sent;
            return _context7.abrupt("return", response);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _query_wasm_code.apply(this, arguments);
}

function query_wasm_codes(_x21, _x22, _x23) {
  return _query_wasm_codes.apply(this, arguments);
} // PinnedCodes gets the pinned code ids


function _query_wasm_codes() {
  _query_wasm_codes = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return client.query.cosmwasm.wasm.v1.codes(_proto.cosmwasm.wasm.v1.QueryCodesRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context8.sent;
            return _context8.abrupt("return", response);

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _query_wasm_codes.apply(this, arguments);
}

function query_wasm_pinnedCodes(_x24, _x25, _x26) {
  return _query_wasm_pinnedCodes.apply(this, arguments);
} // Return list of codeIds with codeInfos having datahash for the contract


function _query_wasm_pinnedCodes() {
  _query_wasm_pinnedCodes = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return client.query.cosmwasm.wasm.v1.pinnedCodes(_proto.cosmwasm.wasm.v1.QueryPinnedCodesRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context9.sent;
            return _context9.abrupt("return", response);

          case 4:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _query_wasm_pinnedCodes.apply(this, arguments);
}

function find_code_id_from_contract_hash(_x27, _x28, _x29, _x30) {
  return _find_code_id_from_contract_hash.apply(this, arguments);
} //---------------------------------------------
// COSMWASM::WASM MODULE - TRANSACTION HELPERS
// --------------------------------------------


function _find_code_id_from_contract_hash() {
  _find_code_id_from_contract_hash = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(client, hash, offset, limit) {
    var codes, codeInfos, i, hex, code_id;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return query_wasm_codes(client, offset, limit);

          case 2:
            codes = _context10.sent;
            codeInfos = codes["codeInfos"];
            i = 0;

          case 5:
            if (!(i < codeInfos.length)) {
              _context10.next = 13;
              break;
            }

            hex = Buffer.from(codeInfos[i]["dataHash"]).toString("hex");
            code_id = codeInfos[i]["codeId"];

            if (!(hash == hex)) {
              _context10.next = 10;
              break;
            }

            return _context10.abrupt("return", code_id);

          case 10:
            i++;
            _context10.next = 5;
            break;

          case 13:
            return _context10.abrupt("return", 0);

          case 14:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _find_code_id_from_contract_hash.apply(this, arguments);
}

function make_storeCode_msg(_x31, _x32, _x33) {
  return _make_storeCode_msg.apply(this, arguments);
}

function _make_storeCode_msg() {
  _make_storeCode_msg = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11(wallet_address, wasm_bytecode, instantiatePermission) {
    var store_code_msg;
    return _regenerator["default"].wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            store_code_msg = _proto.cosmwasm.wasm.v1.MsgStoreCode.fromPartial({
              sender: wallet_address,
              wasmByteCode: wasm_bytecode,
              instantiatePermission: instantiatePermission
            });
            return _context11.abrupt("return", store_code_msg);

          case 2:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _make_storeCode_msg.apply(this, arguments);
}

function make_instantiateContract_msg(_x34, _x35, _x36, _x37, _x38, _x39) {
  return _make_instantiateContract_msg.apply(this, arguments);
}

function _make_instantiateContract_msg() {
  _make_instantiateContract_msg = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(wallet_address, code_id, init_msg, label, funds, admin) {
    var instantiate_msg;
    return _regenerator["default"].wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            instantiate_msg = _proto.cosmwasm.wasm.v1.MsgInstantiateContract.fromPartial({
              sender: wallet_address,
              admin: admin,
              codeId: code_id,
              label: label,
              msg: init_msg,
              funds: funds
            });
            return _context12.abrupt("return", instantiate_msg);

          case 2:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _make_instantiateContract_msg.apply(this, arguments);
}

function make_executeContract_msg(_x40, _x41, _x42, _x43) {
  return _make_executeContract_msg.apply(this, arguments);
}

function _make_executeContract_msg() {
  _make_executeContract_msg = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee13(wallet_address, contract_address, msg, funds) {
    var execute_msg;
    return _regenerator["default"].wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            execute_msg = _proto.cosmwasm.wasm.v1.MsgExecuteContract.fromPartial({
              sender: wallet_address,
              contract: contract_address,
              msg: msg,
              funds: funds
            });
            return _context13.abrupt("return", execute_msg);

          case 2:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13);
  }));
  return _make_executeContract_msg.apply(this, arguments);
}

function make_migrateContract_msg(_x44, _x45, _x46, _x47) {
  return _make_migrateContract_msg.apply(this, arguments);
}

function _make_migrateContract_msg() {
  _make_migrateContract_msg = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee14(wallet_address, contract_address, code_id, msg) {
    var migrate_msg;
    return _regenerator["default"].wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            migrate_msg = _proto.cosmwasm.wasm.v1.MsgMigrateContract.fromPartial({
              sender: wallet_address,
              contract: contract_address,
              codeId: code_id,
              msg: msg
            });
            return _context14.abrupt("return", migrate_msg);

          case 2:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _make_migrateContract_msg.apply(this, arguments);
}

function make_updateAdmin_msg(_x48, _x49, _x50) {
  return _make_updateAdmin_msg.apply(this, arguments);
}

function _make_updateAdmin_msg() {
  _make_updateAdmin_msg = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee15(wallet_address, contract_address, new_admin) {
    var update_admin_msg;
    return _regenerator["default"].wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            update_admin_msg = _proto.cosmwasm.wasm.v1.MsgUpdateAdmin.fromPartial({
              sender: wallet_address,
              contract: contract_address,
              newAdmin: new_admin
            });
            return _context15.abrupt("return", update_admin_msg);

          case 2:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15);
  }));
  return _make_updateAdmin_msg.apply(this, arguments);
}

function make_clearAdmin_msg(_x51, _x52) {
  return _make_clearAdmin_msg.apply(this, arguments);
}

function _make_clearAdmin_msg() {
  _make_clearAdmin_msg = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee16(wallet_address, contract_address) {
    var clear_admin_msg;
    return _regenerator["default"].wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            clear_admin_msg = _proto.cosmwasm.wasm.v1.MsgClearAdmin.fromPartial({
              sender: wallet_address,
              contract: contract_address
            });
            return _context16.abrupt("return", clear_admin_msg);

          case 2:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee16);
  }));
  return _make_clearAdmin_msg.apply(this, arguments);
}
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.query_osmosis_txfees_baseDenom = query_osmosis_txfees_baseDenom;
exports.query_osmosis_txfees_denomPoolId = query_osmosis_txfees_denomPoolId;
exports.query_osmosis_txfees_denomSpotPrice = query_osmosis_txfees_denomSpotPrice;
exports.query_osmosis_txfees_feeTokens = query_osmosis_txfees_feeTokens;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../proto");

// Supported query interfaces - types/proto/osmosis/txfees/v1beta1/query.rpc.query.d.ts
//---------------------------------------------
// OSMOSIS::TXFEES MODULE - QUERY HELPERS
// --------------------------------------------
function query_osmosis_txfees_feeTokens(_x) {
  return _query_osmosis_txfees_feeTokens.apply(this, arguments);
}

function _query_osmosis_txfees_feeTokens() {
  _query_osmosis_txfees_feeTokens = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.osmosis.txfees.feeTokens(_proto.osmosis.txfees.v1beta1.QueryFeeTokensRequest.fromPartial({}));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_osmosis_txfees_feeTokens.apply(this, arguments);
}

function query_osmosis_txfees_denomSpotPrice(_x2, _x3) {
  return _query_osmosis_txfees_denomSpotPrice.apply(this, arguments);
}

function _query_osmosis_txfees_denomSpotPrice() {
  _query_osmosis_txfees_denomSpotPrice = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.osmosis.txfees.denomSpotPrice(_proto.osmosis.txfees.v1beta1.QueryDenomSpotPriceRequest.fromPartial({
              denom: denom
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_osmosis_txfees_denomSpotPrice.apply(this, arguments);
}

function query_osmosis_txfees_denomPoolId(_x4, _x5) {
  return _query_osmosis_txfees_denomPoolId.apply(this, arguments);
}

function _query_osmosis_txfees_denomPoolId() {
  _query_osmosis_txfees_denomPoolId = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.osmosis.txfees.denomPoolId(_proto.osmosis.txfees.v1beta1.QueryDenomPoolIdRequest.fromPartial({
              denom: denom
            }));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_osmosis_txfees_denomPoolId.apply(this, arguments);
}

function query_osmosis_txfees_baseDenom(_x6) {
  return _query_osmosis_txfees_baseDenom.apply(this, arguments);
}

function _query_osmosis_txfees_baseDenom() {
  _query_osmosis_txfees_baseDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.osmosis.txfees.baseDenom(_proto.osmosis.txfees.v1beta1.QueryBaseDenomRequest.fromPartial({}));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_osmosis_txfees_baseDenom.apply(this, arguments);
}
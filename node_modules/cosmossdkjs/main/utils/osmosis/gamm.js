"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_osmosis_gamm_ExitPool = execute_osmosis_gamm_ExitPool;
exports.execute_osmosis_gamm_JoinPool = execute_osmosis_gamm_JoinPool;
exports.execute_osmosis_gamm_SwapExactAmountIn = execute_osmosis_gamm_SwapExactAmountIn;
exports.execute_osmosis_gamm_SwapExactAmountOut = execute_osmosis_gamm_SwapExactAmountOut;
exports.execute_osmosis_gamm_exitSwapExternAmountOut = execute_osmosis_gamm_exitSwapExternAmountOut;
exports.execute_osmosis_gamm_exitSwapShareAmountIn = execute_osmosis_gamm_exitSwapShareAmountIn;
exports.execute_osmosis_gamm_joinSwapExternAmountIn = execute_osmosis_gamm_joinSwapExternAmountIn;
exports.execute_osmosis_gamm_joinSwapShareAmountOut = execute_osmosis_gamm_joinSwapShareAmountOut;
exports.query_osmosis_gamm_estimateSwapExactAmountIn = query_osmosis_gamm_estimateSwapExactAmountIn;
exports.query_osmosis_gamm_estimateSwapExactAmountOut = query_osmosis_gamm_estimateSwapExactAmountOut;
exports.query_osmosis_gamm_numpools = query_osmosis_gamm_numpools;
exports.query_osmosis_gamm_pool = query_osmosis_gamm_pool;
exports.query_osmosis_gamm_poolParams = query_osmosis_gamm_poolParams;
exports.query_osmosis_gamm_pools = query_osmosis_gamm_pools;
exports.query_osmosis_gamm_spotPrice = query_osmosis_gamm_spotPrice;
exports.query_osmosis_gamm_totalLiquidity = query_osmosis_gamm_totalLiquidity;
exports.query_osmosis_gamm_totalPoolLiquidity = query_osmosis_gamm_totalPoolLiquidity;
exports.query_osmosis_gamm_totalShares = query_osmosis_gamm_totalShares;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../proto");

// Supported query interfaces - types/proto/osmosis/gamm/v1beta1/query.rpc.query.d.ts
// Supported transaction interfaces - types/proto/osmosis/gamm/v1beta1/tx.rpc.query.d.ts
//---------------------------------------------
// OSMOSIS::GAMM MODULE - QUERY HELPERS
// --------------------------------------------
function query_osmosis_gamm_pools(_x, _x2, _x3) {
  return _query_osmosis_gamm_pools.apply(this, arguments);
}

function _query_osmosis_gamm_pools() {
  _query_osmosis_gamm_pools = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.osmosis.gamm.v1.pools(_proto.osmosis.gamm.v1beta1.QueryPoolsRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_osmosis_gamm_pools.apply(this, arguments);
}

function query_osmosis_gamm_numpools(_x4) {
  return _query_osmosis_gamm_numpools.apply(this, arguments);
}

function _query_osmosis_gamm_numpools() {
  _query_osmosis_gamm_numpools = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.osmosis.gamm.v1.numPools(_proto.osmosis.gamm.v1beta1.QueryNumPoolsRequest.fromPartial({}));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_osmosis_gamm_numpools.apply(this, arguments);
}

function query_osmosis_gamm_totalLiquidity(_x5) {
  return _query_osmosis_gamm_totalLiquidity.apply(this, arguments);
}

function _query_osmosis_gamm_totalLiquidity() {
  _query_osmosis_gamm_totalLiquidity = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.osmosis.gamm.v1.totalLiquidity(_proto.osmosis.gamm.v1beta1.QueryTotalLiquidityRequest.fromPartial({}));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_osmosis_gamm_totalLiquidity.apply(this, arguments);
}

function query_osmosis_gamm_pool(_x6, _x7) {
  return _query_osmosis_gamm_pool.apply(this, arguments);
}

function _query_osmosis_gamm_pool() {
  _query_osmosis_gamm_pool = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, poolId) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.osmosis.gamm.v1.pool(_proto.osmosis.gamm.v1beta1.QueryPoolRequest.fromPartial({
              poolId: poolId
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_osmosis_gamm_pool.apply(this, arguments);
}

function query_osmosis_gamm_poolParams(_x8, _x9) {
  return _query_osmosis_gamm_poolParams.apply(this, arguments);
}

function _query_osmosis_gamm_poolParams() {
  _query_osmosis_gamm_poolParams = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client, poolId) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.osmosis.gamm.v1.poolParams(_proto.osmosis.gamm.v1beta1.QueryPoolParamsRequest.fromPartial({
              poolId: poolId
            }));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_osmosis_gamm_poolParams.apply(this, arguments);
}

function query_osmosis_gamm_totalPoolLiquidity(_x10, _x11) {
  return _query_osmosis_gamm_totalPoolLiquidity.apply(this, arguments);
}

function _query_osmosis_gamm_totalPoolLiquidity() {
  _query_osmosis_gamm_totalPoolLiquidity = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client, poolId) {
    var response;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return client.query.osmosis.gamm.v1.totalPoolLiquidity(_proto.osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest.fromPartial({
              poolId: poolId
            }));

          case 2:
            response = _context6.sent;
            return _context6.abrupt("return", response);

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _query_osmosis_gamm_totalPoolLiquidity.apply(this, arguments);
}

function query_osmosis_gamm_totalShares(_x12, _x13) {
  return _query_osmosis_gamm_totalShares.apply(this, arguments);
}

function _query_osmosis_gamm_totalShares() {
  _query_osmosis_gamm_totalShares = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client, poolId) {
    var response;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return client.query.osmosis.gamm.v1.totalShares(_proto.osmosis.gamm.v1beta1.QueryTotalPoolLiquidityRequest.fromPartial({
              poolId: poolId
            }));

          case 2:
            response = _context7.sent;
            return _context7.abrupt("return", response);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _query_osmosis_gamm_totalShares.apply(this, arguments);
}

function query_osmosis_gamm_spotPrice(_x14, _x15, _x16, _x17) {
  return _query_osmosis_gamm_spotPrice.apply(this, arguments);
} //export interface SwapAmountInRoute {
//   poolId: Long;
//   tokenOutDenom: string;
// }


function _query_osmosis_gamm_spotPrice() {
  _query_osmosis_gamm_spotPrice = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(client, poolId, baseAssetDenom, quoteAssetDenom) {
    var response;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return client.query.osmosis.gamm.v1.spotPrice(_proto.osmosis.gamm.v1beta1.QuerySpotPriceRequest.fromPartial({
              poolId: poolId,
              baseAssetDenom: baseAssetDenom,
              quoteAssetDenom: quoteAssetDenom
            }));

          case 2:
            response = _context8.sent;
            return _context8.abrupt("return", response);

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _query_osmosis_gamm_spotPrice.apply(this, arguments);
}

function query_osmosis_gamm_estimateSwapExactAmountIn(_x18, _x19, _x20, _x21, _x22) {
  return _query_osmosis_gamm_estimateSwapExactAmountIn.apply(this, arguments);
}

function _query_osmosis_gamm_estimateSwapExactAmountIn() {
  _query_osmosis_gamm_estimateSwapExactAmountIn = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(client, sender, poolId, tokenIn, routes) {
    var response;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return client.query.osmosis.gamm.v1.estimateSwapExactAmountIn(_proto.osmosis.gamm.v1beta1.QuerySwapExactAmountInRequest.fromPartial({
              sender: sender,
              poolId: poolId,
              tokenIn: tokenIn,
              routes: routes
            }));

          case 2:
            response = _context9.sent;
            return _context9.abrupt("return", response);

          case 4:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _query_osmosis_gamm_estimateSwapExactAmountIn.apply(this, arguments);
}

function query_osmosis_gamm_estimateSwapExactAmountOut(_x23, _x24, _x25, _x26, _x27) {
  return _query_osmosis_gamm_estimateSwapExactAmountOut.apply(this, arguments);
} //---------------------------------------------
// OSMOSIS::GAMM MODULE - TRANSACTION HELPERS
// --------------------------------------------


function _query_osmosis_gamm_estimateSwapExactAmountOut() {
  _query_osmosis_gamm_estimateSwapExactAmountOut = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(client, sender, poolId, tokenOut, routes) {
    var response;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return client.query.osmosis.gamm.v1.estimateSwapExactAmountOut(_proto.osmosis.gamm.v1beta1.QuerySwapExactAmountOutRequest.fromPartial({
              sender: sender,
              poolId: poolId,
              tokenOut: tokenOut,
              routes: routes
            }));

          case 2:
            response = _context10.sent;
            return _context10.abrupt("return", response);

          case 4:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _query_osmosis_gamm_estimateSwapExactAmountOut.apply(this, arguments);
}

function execute_osmosis_gamm_JoinPool(_x28, _x29, _x30, _x31, _x32) {
  return _execute_osmosis_gamm_JoinPool.apply(this, arguments);
}

function _execute_osmosis_gamm_JoinPool() {
  _execute_osmosis_gamm_JoinPool = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11(client, sender, poolId, shareOutAmount, tokenInMaxs) {
    var msg;
    return _regenerator["default"].wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgJoinPool.fromPartial({
              sender: sender,
              poolId: poolId,
              shareOutAmount: shareOutAmount,
              tokenInMaxs: tokenInMaxs
            });
            return _context11.abrupt("return", msg);

          case 2:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _execute_osmosis_gamm_JoinPool.apply(this, arguments);
}

function execute_osmosis_gamm_ExitPool(_x33, _x34, _x35, _x36, _x37) {
  return _execute_osmosis_gamm_ExitPool.apply(this, arguments);
}

function _execute_osmosis_gamm_ExitPool() {
  _execute_osmosis_gamm_ExitPool = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(client, sender, poolId, shareInAmount, tokenOutMins) {
    var msg;
    return _regenerator["default"].wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgExitPool.fromPartial({
              sender: sender,
              poolId: poolId,
              shareInAmount: shareInAmount,
              tokenOutMins: tokenOutMins
            });
            return _context12.abrupt("return", msg);

          case 2:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _execute_osmosis_gamm_ExitPool.apply(this, arguments);
}

function execute_osmosis_gamm_SwapExactAmountIn(_x38, _x39, _x40, _x41, _x42) {
  return _execute_osmosis_gamm_SwapExactAmountIn.apply(this, arguments);
}

function _execute_osmosis_gamm_SwapExactAmountIn() {
  _execute_osmosis_gamm_SwapExactAmountIn = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee13(client, sender, routes, tokenIn, tokenOutMinAmount) {
    var msg;
    return _regenerator["default"].wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgSwapExactAmountIn.fromPartial({
              sender: sender,
              routes: routes,
              tokenIn: tokenIn,
              tokenOutMinAmount: tokenOutMinAmount
            });
            return _context13.abrupt("return", msg);

          case 2:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13);
  }));
  return _execute_osmosis_gamm_SwapExactAmountIn.apply(this, arguments);
}

function execute_osmosis_gamm_SwapExactAmountOut(_x43, _x44, _x45, _x46) {
  return _execute_osmosis_gamm_SwapExactAmountOut.apply(this, arguments);
}

function _execute_osmosis_gamm_SwapExactAmountOut() {
  _execute_osmosis_gamm_SwapExactAmountOut = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee14(sender, routes, tokenOut, tokenInMaxAmount) {
    var msg;
    return _regenerator["default"].wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgSwapExactAmountOut.fromPartial({
              sender: sender,
              routes: routes,
              tokenOut: tokenOut,
              tokenInMaxAmount: tokenInMaxAmount
            });
            return _context14.abrupt("return", msg);

          case 2:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _execute_osmosis_gamm_SwapExactAmountOut.apply(this, arguments);
}

function execute_osmosis_gamm_joinSwapExternAmountIn(_x47, _x48, _x49, _x50, _x51) {
  return _execute_osmosis_gamm_joinSwapExternAmountIn.apply(this, arguments);
}

function _execute_osmosis_gamm_joinSwapExternAmountIn() {
  _execute_osmosis_gamm_joinSwapExternAmountIn = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee15(client, sender, poolId, tokenIn, shareOutMinAmount) {
    var msg;
    return _regenerator["default"].wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgJoinSwapExternAmountIn.fromPartial({
              sender: sender,
              poolId: poolId,
              tokenIn: tokenIn,
              shareOutMinAmount: shareOutMinAmount
            });
            return _context15.abrupt("return", msg);

          case 2:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15);
  }));
  return _execute_osmosis_gamm_joinSwapExternAmountIn.apply(this, arguments);
}

function execute_osmosis_gamm_joinSwapShareAmountOut(_x52, _x53, _x54, _x55, _x56, _x57) {
  return _execute_osmosis_gamm_joinSwapShareAmountOut.apply(this, arguments);
}

function _execute_osmosis_gamm_joinSwapShareAmountOut() {
  _execute_osmosis_gamm_joinSwapShareAmountOut = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee16(client, sender, poolId, tokenInDenom, tokenInMaxAmount, shareOutAmount) {
    var msg;
    return _regenerator["default"].wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgJoinSwapShareAmountOut.fromPartial({
              sender: sender,
              poolId: poolId,
              tokenInDenom: tokenInDenom,
              shareOutAmount: shareOutAmount,
              tokenInMaxAmount: tokenInMaxAmount
            });
            return _context16.abrupt("return", msg);

          case 2:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee16);
  }));
  return _execute_osmosis_gamm_joinSwapShareAmountOut.apply(this, arguments);
}

function execute_osmosis_gamm_exitSwapExternAmountOut(_x58, _x59, _x60, _x61, _x62) {
  return _execute_osmosis_gamm_exitSwapExternAmountOut.apply(this, arguments);
}

function _execute_osmosis_gamm_exitSwapExternAmountOut() {
  _execute_osmosis_gamm_exitSwapExternAmountOut = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee17(client, sender, poolId, tokenOut, shareInMaxAmount) {
    var msg;
    return _regenerator["default"].wrap(function _callee17$(_context17) {
      while (1) {
        switch (_context17.prev = _context17.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgExitSwapExternAmountOut.fromPartial({
              sender: sender,
              poolId: poolId,
              tokenOut: tokenOut,
              shareInMaxAmount: shareInMaxAmount
            });
            return _context17.abrupt("return", msg);

          case 2:
          case "end":
            return _context17.stop();
        }
      }
    }, _callee17);
  }));
  return _execute_osmosis_gamm_exitSwapExternAmountOut.apply(this, arguments);
}

function execute_osmosis_gamm_exitSwapShareAmountIn(_x63, _x64, _x65, _x66, _x67, _x68) {
  return _execute_osmosis_gamm_exitSwapShareAmountIn.apply(this, arguments);
}

function _execute_osmosis_gamm_exitSwapShareAmountIn() {
  _execute_osmosis_gamm_exitSwapShareAmountIn = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee18(client, sender, poolId, tokenOutDenom, shareInAmount, tokenOutMinAmount) {
    var msg;
    return _regenerator["default"].wrap(function _callee18$(_context18) {
      while (1) {
        switch (_context18.prev = _context18.next) {
          case 0:
            msg = _proto.osmosis.gamm.v1beta1.MsgExitSwapShareAmountIn.fromPartial({
              sender: sender,
              poolId: poolId,
              tokenOutDenom: tokenOutDenom,
              shareInAmount: shareInAmount,
              tokenOutMinAmount: tokenOutMinAmount
            });
            return _context18.abrupt("return", msg);

          case 2:
          case "end":
            return _context18.stop();
        }
      }
    }, _callee18);
  }));
  return _execute_osmosis_gamm_exitSwapShareAmountIn.apply(this, arguments);
}
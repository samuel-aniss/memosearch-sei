"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_osmosis_superfluid_lockAndSuperfluidDelegate = execute_osmosis_superfluid_lockAndSuperfluidDelegate;
exports.execute_osmosis_superfluid_superfluidDelegate = execute_osmosis_superfluid_superfluidDelegate;
exports.execute_osmosis_superfluid_superfluidUnbondLock = execute_osmosis_superfluid_superfluidUnbondLock;
exports.execute_osmosis_superfluid_superfluidUndelegate = execute_osmosis_superfluid_superfluidUndelegate;
exports.execute_osmosis_superfluid_unPoolWhitelistedPool = execute_osmosis_superfluid_unPoolWhitelistedPool;
exports.query_osmosis_superfluid_allAssets = query_osmosis_superfluid_allAssets;
exports.query_osmosis_superfluid_allIntermediaryAccounts = query_osmosis_superfluid_allIntermediaryAccounts;
exports.query_osmosis_superfluid_assetMultiplier = query_osmosis_superfluid_assetMultiplier;
exports.query_osmosis_superfluid_assetType = query_osmosis_superfluid_assetType;
exports.query_osmosis_superfluid_connectedIntermediaryAccountr = query_osmosis_superfluid_connectedIntermediaryAccountr;
exports.query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom = query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom;
exports.query_osmosis_superfluid_params = query_osmosis_superfluid_params;
exports.query_osmosis_superfluid_superfluidDelegationAmount = query_osmosis_superfluid_superfluidDelegationAmount;
exports.query_osmosis_superfluid_superfluidDelegationsByDelegator = query_osmosis_superfluid_superfluidDelegationsByDelegator;
exports.query_osmosis_superfluid_superfluidDelegationsByValidatorDenom = query_osmosis_superfluid_superfluidDelegationsByValidatorDenom;
exports.query_osmosis_superfluid_superfluidUndelegationsByDelegator = query_osmosis_superfluid_superfluidUndelegationsByDelegator;
exports.query_osmosis_superfluid_totalSuperfluidDelegations = query_osmosis_superfluid_totalSuperfluidDelegations;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../proto");

// Supported query interfaces - types/proto/osmosis/superfluid/query.rpc.query.d.ts
// Supported transaction interfaces - types/proto/osmosis/superfluid/tx.rpc.msg.d.ts
//---------------------------------------------
// OSMOSIS::SUPERFLUID MODULE - QUERY HELPERS
// --------------------------------------------
function query_osmosis_superfluid_params(_x) {
  return _query_osmosis_superfluid_params.apply(this, arguments);
}

function _query_osmosis_superfluid_params() {
  _query_osmosis_superfluid_params = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.osmosis.superfluid.params(_proto.osmosis.superfluid.QueryParamsRequest.fromPartial({}));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_osmosis_superfluid_params.apply(this, arguments);
}

function query_osmosis_superfluid_assetType(_x2, _x3) {
  return _query_osmosis_superfluid_assetType.apply(this, arguments);
}

function _query_osmosis_superfluid_assetType() {
  _query_osmosis_superfluid_assetType = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.osmosis.superfluid.assetType(_proto.osmosis.superfluid.AllAssetsRequest.fromPartial({
              denom: denom
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_osmosis_superfluid_assetType.apply(this, arguments);
}

function query_osmosis_superfluid_allAssets(_x4) {
  return _query_osmosis_superfluid_allAssets.apply(this, arguments);
}

function _query_osmosis_superfluid_allAssets() {
  _query_osmosis_superfluid_allAssets = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.osmosis.superfluid.allAssets(_proto.osmosis.superfluid.AllAssetsRequest.fromPartial({}));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_osmosis_superfluid_allAssets.apply(this, arguments);
}

function query_osmosis_superfluid_assetMultiplier(_x5, _x6) {
  return _query_osmosis_superfluid_assetMultiplier.apply(this, arguments);
}

function _query_osmosis_superfluid_assetMultiplier() {
  _query_osmosis_superfluid_assetMultiplier = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.osmosis.superfluid.assetMultiplier(_proto.osmosis.superfluid.AssetMultiplierRequest.fromPartial({
              denom: denom
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_osmosis_superfluid_assetMultiplier.apply(this, arguments);
}

function query_osmosis_superfluid_allIntermediaryAccounts(_x7, _x8, _x9) {
  return _query_osmosis_superfluid_allIntermediaryAccounts.apply(this, arguments);
}

function _query_osmosis_superfluid_allIntermediaryAccounts() {
  _query_osmosis_superfluid_allIntermediaryAccounts = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.osmosis.superfluid.allIntermediaryAccounts(_proto.osmosis.superfluid.AllIntermediaryAccountsRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_osmosis_superfluid_allIntermediaryAccounts.apply(this, arguments);
}

function query_osmosis_superfluid_connectedIntermediaryAccountr(_x10, _x11) {
  return _query_osmosis_superfluid_connectedIntermediaryAccountr.apply(this, arguments);
}

function _query_osmosis_superfluid_connectedIntermediaryAccountr() {
  _query_osmosis_superfluid_connectedIntermediaryAccountr = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return client.query.osmosis.superfluid.connectedIntermediaryAccount(_proto.osmosis.superfluid.AssetMultiplierRequest.fromPartial({
              denom: denom
            }));

          case 2:
            response = _context6.sent;
            return _context6.abrupt("return", response);

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _query_osmosis_superfluid_connectedIntermediaryAccountr.apply(this, arguments);
}

function query_osmosis_superfluid_totalSuperfluidDelegations(_x12) {
  return _query_osmosis_superfluid_totalSuperfluidDelegations.apply(this, arguments);
}

function _query_osmosis_superfluid_totalSuperfluidDelegations() {
  _query_osmosis_superfluid_totalSuperfluidDelegations = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client) {
    var response;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return client.query.osmosis.superfluid.totalSuperfluidDelegations(_proto.osmosis.superfluid.TotalSuperfluidDelegationsRequest.fromPartial({}));

          case 2:
            response = _context7.sent;
            return _context7.abrupt("return", response);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _query_osmosis_superfluid_totalSuperfluidDelegations.apply(this, arguments);
}

function query_osmosis_superfluid_superfluidDelegationAmount(_x13, _x14, _x15, _x16) {
  return _query_osmosis_superfluid_superfluidDelegationAmount.apply(this, arguments);
}

function _query_osmosis_superfluid_superfluidDelegationAmount() {
  _query_osmosis_superfluid_superfluidDelegationAmount = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(client, delegatorAddress, validatorAddress, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return client.query.osmosis.superfluid.superfluidDelegationAmount(_proto.osmosis.superfluid.SuperfluidDelegationAmountRequest.fromPartial({
              delegatorAddress: delegatorAddress,
              validatorAddress: validatorAddress,
              denom: denom
            }));

          case 2:
            response = _context8.sent;
            return _context8.abrupt("return", response);

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _query_osmosis_superfluid_superfluidDelegationAmount.apply(this, arguments);
}

function query_osmosis_superfluid_superfluidUndelegationsByDelegator(_x17, _x18, _x19) {
  return _query_osmosis_superfluid_superfluidUndelegationsByDelegator.apply(this, arguments);
}

function _query_osmosis_superfluid_superfluidUndelegationsByDelegator() {
  _query_osmosis_superfluid_superfluidUndelegationsByDelegator = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(client, delegatorAddress, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return client.query.osmosis.superfluid.superfluidUndelegationsByDelegator(_proto.osmosis.superfluid.SuperfluidUndelegationsByDelegatorRequest.fromPartial({
              delegatorAddress: delegatorAddress,
              denom: denom
            }));

          case 2:
            response = _context9.sent;
            return _context9.abrupt("return", response);

          case 4:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _query_osmosis_superfluid_superfluidUndelegationsByDelegator.apply(this, arguments);
}

function query_osmosis_superfluid_superfluidDelegationsByDelegator(_x20, _x21) {
  return _query_osmosis_superfluid_superfluidDelegationsByDelegator.apply(this, arguments);
}

function _query_osmosis_superfluid_superfluidDelegationsByDelegator() {
  _query_osmosis_superfluid_superfluidDelegationsByDelegator = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(client, delegatorAddress) {
    var response;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return client.query.osmosis.superfluid.superfluidDelegationsByDelegator(_proto.osmosis.superfluid.SuperfluidDelegationsByDelegatorRequest.fromPartial({
              delegatorAddress: delegatorAddress
            }));

          case 2:
            response = _context10.sent;
            return _context10.abrupt("return", response);

          case 4:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _query_osmosis_superfluid_superfluidDelegationsByDelegator.apply(this, arguments);
}

function query_osmosis_superfluid_superfluidDelegationsByValidatorDenom(_x22, _x23, _x24) {
  return _query_osmosis_superfluid_superfluidDelegationsByValidatorDenom.apply(this, arguments);
}

function _query_osmosis_superfluid_superfluidDelegationsByValidatorDenom() {
  _query_osmosis_superfluid_superfluidDelegationsByValidatorDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11(client, validatorAddress, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            _context11.next = 2;
            return client.query.osmosis.superfluid.superfluidDelegationsByValidatorDenom(_proto.osmosis.superfluid.SuperfluidDelegationsByValidatorDenomRequest.fromPartial({
              validatorAddress: validatorAddress,
              denom: denom
            }));

          case 2:
            response = _context11.sent;
            return _context11.abrupt("return", response);

          case 4:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _query_osmosis_superfluid_superfluidDelegationsByValidatorDenom.apply(this, arguments);
}

function query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom(_x25, _x26, _x27) {
  return _query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom.apply(this, arguments);
} //---------------------------------------------
// OSMOSIS::SUPERFLUID MODULE - TRANSACTION HELPERS
// --------------------------------------------
//MsgSuperfluidDelegate


function _query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom() {
  _query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(client, validatorAddress, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return client.query.osmosis.superfluid.estimateSuperfluidDelegatedAmountByValidatorDenom(_proto.osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomRequest.fromPartial({
              validatorAddress: validatorAddress,
              denom: denom
            }));

          case 2:
            response = _context12.sent;
            return _context12.abrupt("return", response);

          case 4:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom.apply(this, arguments);
}

function execute_osmosis_superfluid_superfluidDelegate(_x28, _x29, _x30) {
  return _execute_osmosis_superfluid_superfluidDelegate.apply(this, arguments);
} //MsgSuperfluidUndelegate


function _execute_osmosis_superfluid_superfluidDelegate() {
  _execute_osmosis_superfluid_superfluidDelegate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee13(sender, lockId, valAddr) {
    var msg;
    return _regenerator["default"].wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            msg = _proto.osmosis.superfluid.MsgSuperfluidDelegate.fromPartial({
              sender: sender,
              lockId: lockId,
              valAddr: valAddr
            });
            return _context13.abrupt("return", msg);

          case 2:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13);
  }));
  return _execute_osmosis_superfluid_superfluidDelegate.apply(this, arguments);
}

function execute_osmosis_superfluid_superfluidUndelegate(_x31, _x32) {
  return _execute_osmosis_superfluid_superfluidUndelegate.apply(this, arguments);
} //MsgSuperfluidUnbondLock


function _execute_osmosis_superfluid_superfluidUndelegate() {
  _execute_osmosis_superfluid_superfluidUndelegate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee14(sender, lockId) {
    var msg;
    return _regenerator["default"].wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            msg = _proto.osmosis.superfluid.MsgSuperfluidUndelegate.fromPartial({
              sender: sender,
              lockId: lockId
            });
            return _context14.abrupt("return", msg);

          case 2:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _execute_osmosis_superfluid_superfluidUndelegate.apply(this, arguments);
}

function execute_osmosis_superfluid_superfluidUnbondLock(_x33, _x34) {
  return _execute_osmosis_superfluid_superfluidUnbondLock.apply(this, arguments);
} //MsgLockAndSuperfluidDelegate


function _execute_osmosis_superfluid_superfluidUnbondLock() {
  _execute_osmosis_superfluid_superfluidUnbondLock = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee15(sender, lockId) {
    var msg;
    return _regenerator["default"].wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            msg = _proto.osmosis.superfluid.MsgSuperfluidUnbondLock.fromPartial({
              sender: sender,
              lockId: lockId
            });
            return _context15.abrupt("return", msg);

          case 2:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15);
  }));
  return _execute_osmosis_superfluid_superfluidUnbondLock.apply(this, arguments);
}

function execute_osmosis_superfluid_lockAndSuperfluidDelegate(_x35, _x36, _x37) {
  return _execute_osmosis_superfluid_lockAndSuperfluidDelegate.apply(this, arguments);
} //MsgUnPoolWhitelistedPool


function _execute_osmosis_superfluid_lockAndSuperfluidDelegate() {
  _execute_osmosis_superfluid_lockAndSuperfluidDelegate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee16(sender, coins, valAddr) {
    var msg;
    return _regenerator["default"].wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            msg = _proto.osmosis.superfluid.MsgLockAndSuperfluidDelegate.fromPartial({
              sender: sender,
              coins: coins,
              valAddr: valAddr
            });
            return _context16.abrupt("return", msg);

          case 2:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee16);
  }));
  return _execute_osmosis_superfluid_lockAndSuperfluidDelegate.apply(this, arguments);
}

function execute_osmosis_superfluid_unPoolWhitelistedPool(_x38, _x39) {
  return _execute_osmosis_superfluid_unPoolWhitelistedPool.apply(this, arguments);
}

function _execute_osmosis_superfluid_unPoolWhitelistedPool() {
  _execute_osmosis_superfluid_unPoolWhitelistedPool = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee17(sender, poolId) {
    var msg;
    return _regenerator["default"].wrap(function _callee17$(_context17) {
      while (1) {
        switch (_context17.prev = _context17.next) {
          case 0:
            msg = _proto.osmosis.superfluid.MsgUnPoolWhitelistedPool.fromPartial({
              sender: sender,
              poolId: poolId
            });
            return _context17.abrupt("return", msg);

          case 2:
          case "end":
            return _context17.stop();
        }
      }
    }, _callee17);
  }));
  return _execute_osmosis_superfluid_unPoolWhitelistedPool.apply(this, arguments);
}
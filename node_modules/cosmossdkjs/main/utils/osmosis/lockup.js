"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_osmosis_lockup_beginUnlocking = execute_osmosis_lockup_beginUnlocking;
exports.execute_osmosis_lockup_beginUnlockingAll = execute_osmosis_lockup_beginUnlockingAll;
exports.execute_osmosis_lockup_extendLockup = execute_osmosis_lockup_extendLockup;
exports.execute_osmosis_lockup_lockTokens = execute_osmosis_lockup_lockTokens;
exports.query_osmosis_lockup_accountLockedCoins = query_osmosis_lockup_accountLockedCoins;
exports.query_osmosis_lockup_accountLockedDuration = query_osmosis_lockup_accountLockedDuration;
exports.query_osmosis_lockup_accountLockedLongerDuration = query_osmosis_lockup_accountLockedLongerDuration;
exports.query_osmosis_lockup_accountLockedLongerDurationDenom = query_osmosis_lockup_accountLockedLongerDurationDenom;
exports.query_osmosis_lockup_accountLockedLongerDurationNotUnlockingOnly = query_osmosis_lockup_accountLockedLongerDurationNotUnlockingOnly;
exports.query_osmosis_lockup_accountLockedPastTime = query_osmosis_lockup_accountLockedPastTime;
exports.query_osmosis_lockup_accountLockedPastTimeDenom = query_osmosis_lockup_accountLockedPastTimeDenom;
exports.query_osmosis_lockup_accountLockedPastTimeNotUnlockingOnly = query_osmosis_lockup_accountLockedPastTimeNotUnlockingOnly;
exports.query_osmosis_lockup_accountUnlockableCoins = query_osmosis_lockup_accountUnlockableCoins;
exports.query_osmosis_lockup_accountUnlockedBeforeTime = query_osmosis_lockup_accountUnlockedBeforeTime;
exports.query_osmosis_lockup_accountUnlockingCoins = query_osmosis_lockup_accountUnlockingCoins;
exports.query_osmosis_lockup_lockedDenom = query_osmosis_lockup_lockedDenom;
exports.query_osmosis_lockup_moduleBalance = query_osmosis_lockup_moduleBalance;
exports.query_osmosis_lockup_moduleLockedAmount = query_osmosis_lockup_moduleLockedAmount;
exports.query_osmosis_lockup_syntheticLockupsByLockupID = query_osmosis_lockup_syntheticLockupsByLockupID;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../proto");

// Supported query interfaces - types/proto/osmosis/lockup/query.rpc.query.d.ts
// Supported transaction interfaces - types/proto/osmosis/lockup/tx.rpc.msg.d.ts
//---------------------------------------------
// OSMOSIS::LOCKUP MODULE - QUERY HELPERS
// --------------------------------------------
function query_osmosis_lockup_moduleBalance(_x) {
  return _query_osmosis_lockup_moduleBalance.apply(this, arguments);
}

function _query_osmosis_lockup_moduleBalance() {
  _query_osmosis_lockup_moduleBalance = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.osmosis.lockup.v1.moduleBalance(_proto.osmosis.lockup.ModuleBalanceRequest.fromPartial({}));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_osmosis_lockup_moduleBalance.apply(this, arguments);
}

function query_osmosis_lockup_moduleLockedAmount(_x2) {
  return _query_osmosis_lockup_moduleLockedAmount.apply(this, arguments);
}

function _query_osmosis_lockup_moduleLockedAmount() {
  _query_osmosis_lockup_moduleLockedAmount = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.osmosis.lockup.v1.moduleLockedAmount(_proto.osmosis.lockup.ModuleLockedAmountRequest.fromPartial({}));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_osmosis_lockup_moduleLockedAmount.apply(this, arguments);
}

function query_osmosis_lockup_accountUnlockableCoins(_x3, _x4) {
  return _query_osmosis_lockup_accountUnlockableCoins.apply(this, arguments);
}

function _query_osmosis_lockup_accountUnlockableCoins() {
  _query_osmosis_lockup_accountUnlockableCoins = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, owner) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.osmosis.lockup.v1.accountUnlockableCoins(_proto.osmosis.lockup.AccountUnlockableCoinsRequest.fromPartial({
              owner: owner
            }));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_osmosis_lockup_accountUnlockableCoins.apply(this, arguments);
}

function query_osmosis_lockup_accountUnlockingCoins(_x5, _x6) {
  return _query_osmosis_lockup_accountUnlockingCoins.apply(this, arguments);
}

function _query_osmosis_lockup_accountUnlockingCoins() {
  _query_osmosis_lockup_accountUnlockingCoins = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, owner) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.osmosis.lockup.v1.accountUnlockingCoins(_proto.osmosis.lockup.AccountUnlockingCoinsRequest.fromPartial({
              owner: owner
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_osmosis_lockup_accountUnlockingCoins.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedCoins(_x7, _x8) {
  return _query_osmosis_lockup_accountLockedCoins.apply(this, arguments);
}

function _query_osmosis_lockup_accountLockedCoins() {
  _query_osmosis_lockup_accountLockedCoins = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client, owner) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedCoins(_proto.osmosis.lockup.AccountLockedCoinsRequest.fromPartial({
              owner: owner
            }));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_osmosis_lockup_accountLockedCoins.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedPastTime(_x9, _x10, _x11) {
  return _query_osmosis_lockup_accountLockedPastTime.apply(this, arguments);
}

function _query_osmosis_lockup_accountLockedPastTime() {
  _query_osmosis_lockup_accountLockedPastTime = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client, owner, timestamp) {
    var response;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedPastTime(_proto.osmosis.lockup.AccountLockedPastTimeRequest.fromPartial({
              owner: owner,
              timestamp: timestamp
            }));

          case 2:
            response = _context6.sent;
            return _context6.abrupt("return", response);

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _query_osmosis_lockup_accountLockedPastTime.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedPastTimeNotUnlockingOnly(_x12, _x13, _x14) {
  return _query_osmosis_lockup_accountLockedPastTimeNotUnlockingOnly.apply(this, arguments);
}

function _query_osmosis_lockup_accountLockedPastTimeNotUnlockingOnly() {
  _query_osmosis_lockup_accountLockedPastTimeNotUnlockingOnly = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client, owner, timestamp) {
    var response;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedPastTimeNotUnlockingOnly(_proto.osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyRequest.fromPartial({
              owner: owner,
              timestamp: timestamp
            }));

          case 2:
            response = _context7.sent;
            return _context7.abrupt("return", response);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _query_osmosis_lockup_accountLockedPastTimeNotUnlockingOnly.apply(this, arguments);
}

function query_osmosis_lockup_accountUnlockedBeforeTime(_x15, _x16, _x17) {
  return _query_osmosis_lockup_accountUnlockedBeforeTime.apply(this, arguments);
}

function _query_osmosis_lockup_accountUnlockedBeforeTime() {
  _query_osmosis_lockup_accountUnlockedBeforeTime = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(client, owner, timestamp) {
    var response;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return client.query.osmosis.lockup.v1.accountUnlockedBeforeTime(_proto.osmosis.lockup.AccountUnlockedBeforeTimeRequest.fromPartial({
              owner: owner,
              timestamp: timestamp
            }));

          case 2:
            response = _context8.sent;
            return _context8.abrupt("return", response);

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _query_osmosis_lockup_accountUnlockedBeforeTime.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedPastTimeDenom(_x18, _x19, _x20, _x21) {
  return _query_osmosis_lockup_accountLockedPastTimeDenom.apply(this, arguments);
}

function _query_osmosis_lockup_accountLockedPastTimeDenom() {
  _query_osmosis_lockup_accountLockedPastTimeDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(client, owner, timestamp, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedPastTimeDenom(_proto.osmosis.lockup.AccountLockedPastTimeDenomRequest.fromPartial({
              owner: owner,
              timestamp: timestamp,
              denom: denom
            }));

          case 2:
            response = _context9.sent;
            return _context9.abrupt("return", response);

          case 4:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _query_osmosis_lockup_accountLockedPastTimeDenom.apply(this, arguments);
}

function query_osmosis_lockup_lockedDenom(_x22, _x23, _x24) {
  return _query_osmosis_lockup_lockedDenom.apply(this, arguments);
}

function _query_osmosis_lockup_lockedDenom() {
  _query_osmosis_lockup_lockedDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(client, denom, duration) {
    var response;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return client.query.osmosis.lockup.v1.lockedDenom(_proto.osmosis.lockup.LockedDenomRequest.fromPartial({
              denom: denom,
              duration: duration
            }));

          case 2:
            response = _context10.sent;
            return _context10.abrupt("return", response);

          case 4:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _query_osmosis_lockup_lockedDenom.apply(this, arguments);
}

function query_osmosis_lockup_syntheticLockupsByLockupID(_x25, _x26) {
  return _query_osmosis_lockup_syntheticLockupsByLockupID.apply(this, arguments);
}

function _query_osmosis_lockup_syntheticLockupsByLockupID() {
  _query_osmosis_lockup_syntheticLockupsByLockupID = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11(client, lockId) {
    var response;
    return _regenerator["default"].wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            _context11.next = 2;
            return client.query.osmosis.lockup.v1.syntheticLockupsByLockupID(_proto.osmosis.lockup.SyntheticLockupsByLockupIDRequest.fromPartial({
              lockId: lockId
            }));

          case 2:
            response = _context11.sent;
            return _context11.abrupt("return", response);

          case 4:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _query_osmosis_lockup_syntheticLockupsByLockupID.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedLongerDuration(_x27, _x28, _x29) {
  return _query_osmosis_lockup_accountLockedLongerDuration.apply(this, arguments);
}

function _query_osmosis_lockup_accountLockedLongerDuration() {
  _query_osmosis_lockup_accountLockedLongerDuration = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(client, owner, duration) {
    var response;
    return _regenerator["default"].wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedLongerDuration(_proto.osmosis.lockup.AccountLockedLongerDurationRequest.fromPartial({
              owner: owner,
              duration: duration
            }));

          case 2:
            response = _context12.sent;
            return _context12.abrupt("return", response);

          case 4:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _query_osmosis_lockup_accountLockedLongerDuration.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedDuration(_x30, _x31, _x32) {
  return _query_osmosis_lockup_accountLockedDuration.apply(this, arguments);
}

function _query_osmosis_lockup_accountLockedDuration() {
  _query_osmosis_lockup_accountLockedDuration = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee13(client, owner, duration) {
    var response;
    return _regenerator["default"].wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            _context13.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedDuration(_proto.osmosis.lockup.AccountLockedDurationRequest.fromPartial({
              owner: owner,
              duration: duration
            }));

          case 2:
            response = _context13.sent;
            return _context13.abrupt("return", response);

          case 4:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13);
  }));
  return _query_osmosis_lockup_accountLockedDuration.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedLongerDurationNotUnlockingOnly(_x33, _x34, _x35) {
  return _query_osmosis_lockup_accountLockedLongerDurationNotUnlockingOnly.apply(this, arguments);
}

function _query_osmosis_lockup_accountLockedLongerDurationNotUnlockingOnly() {
  _query_osmosis_lockup_accountLockedLongerDurationNotUnlockingOnly = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee14(client, owner, duration) {
    var response;
    return _regenerator["default"].wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            _context14.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedLongerDurationNotUnlockingOnly(_proto.osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyRequest.fromPartial({
              owner: owner,
              duration: duration
            }));

          case 2:
            response = _context14.sent;
            return _context14.abrupt("return", response);

          case 4:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _query_osmosis_lockup_accountLockedLongerDurationNotUnlockingOnly.apply(this, arguments);
}

function query_osmosis_lockup_accountLockedLongerDurationDenom(_x36, _x37, _x38, _x39) {
  return _query_osmosis_lockup_accountLockedLongerDurationDenom.apply(this, arguments);
} //---------------------------------------------
// OSMOSIS::LOCKUP MODULE - QUERY HELPERS
// --------------------------------------------
//MsgLockTokens


function _query_osmosis_lockup_accountLockedLongerDurationDenom() {
  _query_osmosis_lockup_accountLockedLongerDurationDenom = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee15(client, owner, duration, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            _context15.next = 2;
            return client.query.osmosis.lockup.v1.accountLockedLongerDurationDenom(_proto.osmosis.lockup.AccountLockedLongerDurationDenomRequest.fromPartial({
              owner: owner,
              duration: duration,
              denom: denom
            }));

          case 2:
            response = _context15.sent;
            return _context15.abrupt("return", response);

          case 4:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15);
  }));
  return _query_osmosis_lockup_accountLockedLongerDurationDenom.apply(this, arguments);
}

function execute_osmosis_lockup_lockTokens(_x40, _x41, _x42) {
  return _execute_osmosis_lockup_lockTokens.apply(this, arguments);
} //MsgBeginUnlockingAll


function _execute_osmosis_lockup_lockTokens() {
  _execute_osmosis_lockup_lockTokens = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee16(owner, duration, coins) {
    var msg;
    return _regenerator["default"].wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            msg = _proto.osmosis.lockup.MsgLockTokens.fromPartial({
              owner: owner,
              duration: duration,
              coins: coins
            });
            return _context16.abrupt("return", msg);

          case 2:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee16);
  }));
  return _execute_osmosis_lockup_lockTokens.apply(this, arguments);
}

function execute_osmosis_lockup_beginUnlockingAll(_x43) {
  return _execute_osmosis_lockup_beginUnlockingAll.apply(this, arguments);
} //MsgBeginUnlocking


function _execute_osmosis_lockup_beginUnlockingAll() {
  _execute_osmosis_lockup_beginUnlockingAll = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee17(owner) {
    var msg;
    return _regenerator["default"].wrap(function _callee17$(_context17) {
      while (1) {
        switch (_context17.prev = _context17.next) {
          case 0:
            msg = _proto.osmosis.lockup.MsgBeginUnlockingAll.fromPartial({
              owner: owner
            });
            return _context17.abrupt("return", msg);

          case 2:
          case "end":
            return _context17.stop();
        }
      }
    }, _callee17);
  }));
  return _execute_osmosis_lockup_beginUnlockingAll.apply(this, arguments);
}

function execute_osmosis_lockup_beginUnlocking(_x44, _x45, _x46) {
  return _execute_osmosis_lockup_beginUnlocking.apply(this, arguments);
} //MsgExtendLockup


function _execute_osmosis_lockup_beginUnlocking() {
  _execute_osmosis_lockup_beginUnlocking = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee18(owner, ID, coins) {
    var msg;
    return _regenerator["default"].wrap(function _callee18$(_context18) {
      while (1) {
        switch (_context18.prev = _context18.next) {
          case 0:
            msg = _proto.osmosis.lockup.MsgBeginUnlocking.fromPartial({
              owner: owner,
              ID: ID,
              coins: coins
            });
            return _context18.abrupt("return", msg);

          case 2:
          case "end":
            return _context18.stop();
        }
      }
    }, _callee18);
  }));
  return _execute_osmosis_lockup_beginUnlocking.apply(this, arguments);
}

function execute_osmosis_lockup_extendLockup(_x47, _x48) {
  return _execute_osmosis_lockup_extendLockup.apply(this, arguments);
}

function _execute_osmosis_lockup_extendLockup() {
  _execute_osmosis_lockup_extendLockup = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee19(owner, ID) {
    var msg;
    return _regenerator["default"].wrap(function _callee19$(_context19) {
      while (1) {
        switch (_context19.prev = _context19.next) {
          case 0:
            msg = _proto.osmosis.lockup.MsgExtendLockup.fromPartial({
              owner: owner,
              ID: ID
            });
            return _context19.abrupt("return", msg);

          case 2:
          case "end":
            return _context19.stop();
        }
      }
    }, _callee19);
  }));
  return _execute_osmosis_lockup_extendLockup.apply(this, arguments);
}
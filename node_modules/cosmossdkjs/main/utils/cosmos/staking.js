"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_cosmos_staking_begin_redelegate = execute_cosmos_staking_begin_redelegate;
exports.execute_cosmos_staking_create_validator = execute_cosmos_staking_create_validator;
exports.execute_cosmos_staking_delegate = execute_cosmos_staking_delegate;
exports.execute_cosmos_staking_edit_validator = execute_cosmos_staking_edit_validator;
exports.execute_cosmos_staking_undelegate = execute_cosmos_staking_undelegate;
exports.query_cosmos_staking_delegation = query_cosmos_staking_delegation;
exports.query_cosmos_staking_delegator_delegations = query_cosmos_staking_delegator_delegations;
exports.query_cosmos_staking_delegator_unbonding_delegations = query_cosmos_staking_delegator_unbonding_delegations;
exports.query_cosmos_staking_delegator_validator = query_cosmos_staking_delegator_validator;
exports.query_cosmos_staking_delegator_validators = query_cosmos_staking_delegator_validators;
exports.query_cosmos_staking_historical_info = query_cosmos_staking_historical_info;
exports.query_cosmos_staking_params = query_cosmos_staking_params;
exports.query_cosmos_staking_pool = query_cosmos_staking_pool;
exports.query_cosmos_staking_redelegations = query_cosmos_staking_redelegations;
exports.query_cosmos_staking_unbonding_delegation = query_cosmos_staking_unbonding_delegation;
exports.query_cosmos_staking_validator = query_cosmos_staking_validator;
exports.query_cosmos_staking_validator_delegations = query_cosmos_staking_validator_delegations;
exports.query_cosmos_staking_validator_unbonding_delegations = query_cosmos_staking_validator_unbonding_delegations;
exports.query_cosmos_staking_validators = query_cosmos_staking_validators;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../proto");

// Supported query interfaces - types/proto/cosmos/staking/v1beta1/query.rpc.query.d.ts
// Supported transaction interfaces - types/proto/cosmos/staking/v1beta1/tx.rpc.msg.d.ts
//---------------------------------------------
// COSMOS::STAKING MODULE - QUERY HELPERS
// --------------------------------------------
function query_cosmos_staking_validators(_x, _x2, _x3, _x4) {
  return _query_cosmos_staking_validators.apply(this, arguments);
}

function _query_cosmos_staking_validators() {
  _query_cosmos_staking_validators = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, status, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.cosmos.staking.v1beta1.validators(_proto.cosmos.staking.v1beta1.QueryValidatorsRequest.fromPartial({
              status: status,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_cosmos_staking_validators.apply(this, arguments);
}

function query_cosmos_staking_validator(_x5, _x6) {
  return _query_cosmos_staking_validator.apply(this, arguments);
}

function _query_cosmos_staking_validator() {
  _query_cosmos_staking_validator = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, validatorAddr) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.cosmos.staking.v1beta1.validator(_proto.cosmos.staking.v1beta1.QueryValidatorRequest.fromPartial({
              validatorAddr: validatorAddr
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_cosmos_staking_validator.apply(this, arguments);
}

function query_cosmos_staking_validator_delegations(_x7, _x8, _x9, _x10) {
  return _query_cosmos_staking_validator_delegations.apply(this, arguments);
}

function _query_cosmos_staking_validator_delegations() {
  _query_cosmos_staking_validator_delegations = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, validatorAddr, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.cosmos.staking.v1beta1.validatorDelegations(_proto.cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.fromPartial({
              validatorAddr: validatorAddr,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_cosmos_staking_validator_delegations.apply(this, arguments);
}

function query_cosmos_staking_validator_unbonding_delegations(_x11, _x12, _x13, _x14) {
  return _query_cosmos_staking_validator_unbonding_delegations.apply(this, arguments);
}

function _query_cosmos_staking_validator_unbonding_delegations() {
  _query_cosmos_staking_validator_unbonding_delegations = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, validatorAddr, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.cosmos.staking.v1beta1.validatorUnbondingDelegations(_proto.cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.fromPartial({
              validatorAddr: validatorAddr,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_cosmos_staking_validator_unbonding_delegations.apply(this, arguments);
}

function query_cosmos_staking_delegation(_x15, _x16, _x17) {
  return _query_cosmos_staking_delegation.apply(this, arguments);
}

function _query_cosmos_staking_delegation() {
  _query_cosmos_staking_delegation = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client, delegatorAddr, validatorAddr) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.cosmos.staking.v1beta1.delegation(_proto.cosmos.staking.v1beta1.QueryDelegationRequest.fromPartial({
              validatorAddr: validatorAddr,
              delegatorAddr: delegatorAddr
            }));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_cosmos_staking_delegation.apply(this, arguments);
}

function query_cosmos_staking_unbonding_delegation(_x18, _x19, _x20) {
  return _query_cosmos_staking_unbonding_delegation.apply(this, arguments);
}

function _query_cosmos_staking_unbonding_delegation() {
  _query_cosmos_staking_unbonding_delegation = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client, delegatorAddr, validatorAddr) {
    var response;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return client.query.cosmos.staking.v1beta1.unbondingDelegation(_proto.cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.fromPartial({
              validatorAddr: validatorAddr,
              delegatorAddr: delegatorAddr
            }));

          case 2:
            response = _context6.sent;
            return _context6.abrupt("return", response);

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _query_cosmos_staking_unbonding_delegation.apply(this, arguments);
}

function query_cosmos_staking_delegator_delegations(_x21, _x22, _x23, _x24) {
  return _query_cosmos_staking_delegator_delegations.apply(this, arguments);
}

function _query_cosmos_staking_delegator_delegations() {
  _query_cosmos_staking_delegator_delegations = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client, delegatorAddr, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return client.query.cosmos.staking.v1beta1.delegatorDelegations(_proto.cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.fromPartial({
              delegatorAddr: delegatorAddr,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context7.sent;
            return _context7.abrupt("return", response);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _query_cosmos_staking_delegator_delegations.apply(this, arguments);
}

function query_cosmos_staking_delegator_unbonding_delegations(_x25, _x26, _x27, _x28) {
  return _query_cosmos_staking_delegator_unbonding_delegations.apply(this, arguments);
}

function _query_cosmos_staking_delegator_unbonding_delegations() {
  _query_cosmos_staking_delegator_unbonding_delegations = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(client, delegatorAddr, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return client.query.cosmos.staking.v1beta1.delegatorUnbondingDelegations(_proto.cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.fromPartial({
              delegatorAddr: delegatorAddr,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context8.sent;
            return _context8.abrupt("return", response);

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _query_cosmos_staking_delegator_unbonding_delegations.apply(this, arguments);
}

function query_cosmos_staking_redelegations(_x29, _x30, _x31, _x32, _x33, _x34) {
  return _query_cosmos_staking_redelegations.apply(this, arguments);
} //delegatorValidators


function _query_cosmos_staking_redelegations() {
  _query_cosmos_staking_redelegations = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(client, delegatorAddr, srcValidatorAddr, dstValidatorAddr, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.next = 2;
            return client.query.cosmos.staking.v1beta1.redelegations(_proto.cosmos.staking.v1beta1.QueryRedelegationsRequest.fromPartial({
              delegatorAddr: delegatorAddr,
              srcValidatorAddr: srcValidatorAddr,
              dstValidatorAddr: dstValidatorAddr,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context9.sent;
            return _context9.abrupt("return", response);

          case 4:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _query_cosmos_staking_redelegations.apply(this, arguments);
}

function query_cosmos_staking_delegator_validators(_x35, _x36, _x37, _x38) {
  return _query_cosmos_staking_delegator_validators.apply(this, arguments);
}

function _query_cosmos_staking_delegator_validators() {
  _query_cosmos_staking_delegator_validators = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(client, delegatorAddr, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return client.query.cosmos.staking.v1beta1.delegatorValidators(_proto.cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.fromPartial({
              delegatorAddr: delegatorAddr,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context10.sent;
            return _context10.abrupt("return", response);

          case 4:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _query_cosmos_staking_delegator_validators.apply(this, arguments);
}

function query_cosmos_staking_delegator_validator(_x39, _x40, _x41) {
  return _query_cosmos_staking_delegator_validator.apply(this, arguments);
}

function _query_cosmos_staking_delegator_validator() {
  _query_cosmos_staking_delegator_validator = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11(client, delegatorAddr, validatorAddr) {
    var response;
    return _regenerator["default"].wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            _context11.next = 2;
            return client.query.cosmos.staking.v1beta1.delegatorValidator(_proto.cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.fromPartial({
              delegatorAddr: delegatorAddr,
              validatorAddr: validatorAddr
            }));

          case 2:
            response = _context11.sent;
            return _context11.abrupt("return", response);

          case 4:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _query_cosmos_staking_delegator_validator.apply(this, arguments);
}

function query_cosmos_staking_historical_info(_x42, _x43) {
  return _query_cosmos_staking_historical_info.apply(this, arguments);
}

function _query_cosmos_staking_historical_info() {
  _query_cosmos_staking_historical_info = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(client, height) {
    var response;
    return _regenerator["default"].wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return client.query.cosmos.staking.v1beta1.historicalInfo(_proto.cosmos.staking.v1beta1.QueryHistoricalInfoRequest.fromPartial({
              height: height
            }));

          case 2:
            response = _context12.sent;
            return _context12.abrupt("return", response);

          case 4:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _query_cosmos_staking_historical_info.apply(this, arguments);
}

function query_cosmos_staking_pool(_x44, _x45) {
  return _query_cosmos_staking_pool.apply(this, arguments);
}

function _query_cosmos_staking_pool() {
  _query_cosmos_staking_pool = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee13(client, poolId) {
    var response;
    return _regenerator["default"].wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            _context13.next = 2;
            return client.query.cosmos.staking.v1beta1.pool(_proto.cosmos.staking.v1beta1.QueryPoolRequest.fromPartial({
              poolId: poolId
            }));

          case 2:
            response = _context13.sent;
            return _context13.abrupt("return", response);

          case 4:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13);
  }));
  return _query_cosmos_staking_pool.apply(this, arguments);
}

function query_cosmos_staking_params(_x46) {
  return _query_cosmos_staking_params.apply(this, arguments);
} //---------------------------------------------
// COSMOS::STAKING MODULE - TRANSACTION HELPERS
// --------------------------------------------
//MsgCreateValidator


function _query_cosmos_staking_params() {
  _query_cosmos_staking_params = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee14(client) {
    var response;
    return _regenerator["default"].wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            _context14.next = 2;
            return client.query.cosmos.staking.v1beta1.params(_proto.cosmos.staking.v1beta1.QueryParamsRequest.fromPartial({}));

          case 2:
            response = _context14.sent;
            return _context14.abrupt("return", response);

          case 4:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14);
  }));
  return _query_cosmos_staking_params.apply(this, arguments);
}

function execute_cosmos_staking_create_validator(_x47, _x48, _x49, _x50, _x51, _x52, _x53) {
  return _execute_cosmos_staking_create_validator.apply(this, arguments);
} //MsgEditValidator


function _execute_cosmos_staking_create_validator() {
  _execute_cosmos_staking_create_validator = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee15(description, commission, minSelfDelegation, delegatorAddress, validatorAddress, pubkey, value) {
    var msg;
    return _regenerator["default"].wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            msg = _proto.cosmos.staking.v1beta1.MsgCreateValidator.fromPartial({
              description: description,
              commission: commission,
              minSelfDelegation: minSelfDelegation,
              delegatorAddress: delegatorAddress,
              validatorAddress: validatorAddress,
              pubkey: pubkey,
              value: value
            });
            return _context15.abrupt("return", msg);

          case 2:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15);
  }));
  return _execute_cosmos_staking_create_validator.apply(this, arguments);
}

function execute_cosmos_staking_edit_validator(_x54, _x55) {
  return _execute_cosmos_staking_edit_validator.apply(this, arguments);
} //MsgDelegate


function _execute_cosmos_staking_edit_validator() {
  _execute_cosmos_staking_edit_validator = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee16(description, validatorAddress) {
    var msg;
    return _regenerator["default"].wrap(function _callee16$(_context16) {
      while (1) {
        switch (_context16.prev = _context16.next) {
          case 0:
            msg = _proto.cosmos.staking.v1beta1.MsgEditValidator.fromPartial({
              description: description,
              validatorAddress: validatorAddress
            });
            return _context16.abrupt("return", msg);

          case 2:
          case "end":
            return _context16.stop();
        }
      }
    }, _callee16);
  }));
  return _execute_cosmos_staking_edit_validator.apply(this, arguments);
}

function execute_cosmos_staking_delegate(_x56, _x57, _x58) {
  return _execute_cosmos_staking_delegate.apply(this, arguments);
}

function _execute_cosmos_staking_delegate() {
  _execute_cosmos_staking_delegate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee17(delegatorAddress, validatorAddress, amount) {
    var msg;
    return _regenerator["default"].wrap(function _callee17$(_context17) {
      while (1) {
        switch (_context17.prev = _context17.next) {
          case 0:
            msg = _proto.cosmos.staking.v1beta1.MsgDelegate.fromPartial({
              delegatorAddress: delegatorAddress,
              validatorAddress: validatorAddress,
              amount: amount
            });
            return _context17.abrupt("return", msg);

          case 2:
          case "end":
            return _context17.stop();
        }
      }
    }, _callee17);
  }));
  return _execute_cosmos_staking_delegate.apply(this, arguments);
}

function execute_cosmos_staking_begin_redelegate(_x59, _x60, _x61, _x62) {
  return _execute_cosmos_staking_begin_redelegate.apply(this, arguments);
}

function _execute_cosmos_staking_begin_redelegate() {
  _execute_cosmos_staking_begin_redelegate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee18(delegatorAddress, validatorSrcAddress, validatorDstAddress, amount) {
    var msg;
    return _regenerator["default"].wrap(function _callee18$(_context18) {
      while (1) {
        switch (_context18.prev = _context18.next) {
          case 0:
            msg = _proto.cosmos.staking.v1beta1.MsgBeginRedelegate.fromPartial({
              delegatorAddress: delegatorAddress,
              validatorSrcAddress: validatorSrcAddress,
              validatorDstAddress: validatorDstAddress,
              amount: amount
            });
            return _context18.abrupt("return", msg);

          case 2:
          case "end":
            return _context18.stop();
        }
      }
    }, _callee18);
  }));
  return _execute_cosmos_staking_begin_redelegate.apply(this, arguments);
}

function execute_cosmos_staking_undelegate(_x63, _x64, _x65) {
  return _execute_cosmos_staking_undelegate.apply(this, arguments);
}

function _execute_cosmos_staking_undelegate() {
  _execute_cosmos_staking_undelegate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee19(delegatorAddress, validatorAddress, amount) {
    var msg;
    return _regenerator["default"].wrap(function _callee19$(_context19) {
      while (1) {
        switch (_context19.prev = _context19.next) {
          case 0:
            msg = _proto.cosmos.staking.v1beta1.MsgUndelegate.fromPartial({
              delegatorAddress: delegatorAddress,
              validatorAddress: validatorAddress,
              amount: amount
            });
            return _context19.abrupt("return", msg);

          case 2:
          case "end":
            return _context19.stop();
        }
      }
    }, _callee19);
  }));
  return _execute_cosmos_staking_undelegate.apply(this, arguments);
}
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_cosmos_bank_multi_send = execute_cosmos_bank_multi_send;
exports.execute_cosmos_bank_send = execute_cosmos_bank_send;
exports.query_cosmos_bank_all_balances = query_cosmos_bank_all_balances;
exports.query_cosmos_bank_balance = query_cosmos_bank_balance;
exports.query_cosmos_bank_denom_metadata = query_cosmos_bank_denom_metadata;
exports.query_cosmos_bank_denoms_metadata = query_cosmos_bank_denoms_metadata;
exports.query_cosmos_bank_params = query_cosmos_bank_params;
exports.query_cosmos_bank_supply_of = query_cosmos_bank_supply_of;
exports.query_cosmos_bank_total_supply = query_cosmos_bank_total_supply;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../proto");

// Supported query interfaces - types/proto/cosmos/bank/v1beta1/query.rpc.query.d.ts
// Supported tranasction interfaces - types/proto/cosmos/bank/v1beta1/tx.rpc.msg.d.ts
//---------------------------------------------
// COSMOS::BANK MODULE - QUERY HELPERS
// --------------------------------------------
function query_cosmos_bank_balance(_x, _x2, _x3) {
  return _query_cosmos_bank_balance.apply(this, arguments);
}

function _query_cosmos_bank_balance() {
  _query_cosmos_bank_balance = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, address, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.cosmos.bank.v1beta1.balance(_proto.cosmos.bank.v1beta1.QueryBalanceRequest.fromPartial({
              address: address,
              denom: denom
            }));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_cosmos_bank_balance.apply(this, arguments);
}

function query_cosmos_bank_all_balances(_x4, _x5, _x6, _x7) {
  return _query_cosmos_bank_all_balances.apply(this, arguments);
}

function _query_cosmos_bank_all_balances() {
  _query_cosmos_bank_all_balances = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, address, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.cosmos.bank.v1beta1.allBalances(_proto.cosmos.bank.v1beta1.QueryAllBalancesRequest.fromPartial({
              address: address,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_cosmos_bank_all_balances.apply(this, arguments);
}

function query_cosmos_bank_total_supply(_x8, _x9, _x10) {
  return _query_cosmos_bank_total_supply.apply(this, arguments);
}

function _query_cosmos_bank_total_supply() {
  _query_cosmos_bank_total_supply = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.cosmos.bank.v1beta1.totalSupply(_proto.cosmos.bank.v1beta1.QueryTotalSupplyRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_cosmos_bank_total_supply.apply(this, arguments);
}

function query_cosmos_bank_supply_of(_x11, _x12) {
  return _query_cosmos_bank_supply_of.apply(this, arguments);
}

function _query_cosmos_bank_supply_of() {
  _query_cosmos_bank_supply_of = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.cosmos.bank.v1beta1.supplyOf(_proto.cosmos.bank.v1beta1.QuerySupplyOfRequest.fromPartial({
              denom: denom
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_cosmos_bank_supply_of.apply(this, arguments);
}

function query_cosmos_bank_params(_x13) {
  return _query_cosmos_bank_params.apply(this, arguments);
}

function _query_cosmos_bank_params() {
  _query_cosmos_bank_params = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.cosmos.bank.v1beta1.params(_proto.cosmos.bank.v1beta1.QueryParamsRequest.fromPartial({}));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_cosmos_bank_params.apply(this, arguments);
}

function query_cosmos_bank_denom_metadata(_x14, _x15) {
  return _query_cosmos_bank_denom_metadata.apply(this, arguments);
}

function _query_cosmos_bank_denom_metadata() {
  _query_cosmos_bank_denom_metadata = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client, denom) {
    var response;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return client.query.cosmos.bank.v1beta1.denomMetadata(_proto.cosmos.bank.v1beta1.QueryDenomMetadataRequest.fromPartial({
              denom: denom
            }));

          case 2:
            response = _context6.sent;
            return _context6.abrupt("return", response);

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _query_cosmos_bank_denom_metadata.apply(this, arguments);
}

function query_cosmos_bank_denoms_metadata(_x16, _x17, _x18) {
  return _query_cosmos_bank_denoms_metadata.apply(this, arguments);
} //---------------------------------------------
// COSMOS::BANK MODULE - TRANSACTION HELPERS
// --------------------------------------------
// MsgSend


function _query_cosmos_bank_denoms_metadata() {
  _query_cosmos_bank_denoms_metadata = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return client.query.cosmos.bank.v1beta1.denomsMetadata(_proto.cosmos.bank.v1beta1.QueryDenomsMetadataRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context7.sent;
            return _context7.abrupt("return", response);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _query_cosmos_bank_denoms_metadata.apply(this, arguments);
}

function execute_cosmos_bank_send(_x19, _x20, _x21) {
  return _execute_cosmos_bank_send.apply(this, arguments);
} // MsgMultiSend


function _execute_cosmos_bank_send() {
  _execute_cosmos_bank_send = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(fromAddress, toAddress, amount) {
    var msg;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            msg = _proto.cosmos.bank.v1beta1.MsgSend.fromPartial({
              fromAddress: fromAddress,
              toAddress: toAddress,
              amount: amount
            });
            return _context8.abrupt("return", msg);

          case 2:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _execute_cosmos_bank_send.apply(this, arguments);
}

function execute_cosmos_bank_multi_send(_x22, _x23) {
  return _execute_cosmos_bank_multi_send.apply(this, arguments);
}

function _execute_cosmos_bank_multi_send() {
  _execute_cosmos_bank_multi_send = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(inputs, outputs) {
    var msg;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            msg = _proto.cosmos.bank.v1beta1.MsgMultiSend.fromPartial({
              inputs: inputs,
              outputs: outputs
            });
            return _context9.abrupt("return", msg);

          case 2:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _execute_cosmos_bank_multi_send.apply(this, arguments);
}
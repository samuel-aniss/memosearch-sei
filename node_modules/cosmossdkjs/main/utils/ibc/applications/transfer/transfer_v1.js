"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_ibc_applications_transfer_v1_transfer = execute_ibc_applications_transfer_v1_transfer;
exports.query_ibc_applications_transfer_v1_denomHash = query_ibc_applications_transfer_v1_denomHash;
exports.query_ibc_applications_transfer_v1_denomTrace = query_ibc_applications_transfer_v1_denomTrace;
exports.query_ibc_applications_transfer_v1_denomTraces = query_ibc_applications_transfer_v1_denomTraces;
exports.query_ibc_applications_transfer_v1_params = query_ibc_applications_transfer_v1_params;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../../../proto");

// Supported query interfaces - types/proto/ibc/applications/transfer/v1/query.rpc.query.d.ts
//---------------------------------------------
// IBC::TRANSFER_V1 MODULE - QUERY HELPERS
// --------------------------------------------
function query_ibc_applications_transfer_v1_denomTrace(_x, _x2) {
  return _query_ibc_applications_transfer_v1_denomTrace.apply(this, arguments);
}

function _query_ibc_applications_transfer_v1_denomTrace() {
  _query_ibc_applications_transfer_v1_denomTrace = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, hash) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.ibc.applications.transfer.v1.denomTrace(_proto.ibc.applications.transfer.v1.QueryDenomTraceRequest.fromPartial({
              hash: hash
            }));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_ibc_applications_transfer_v1_denomTrace.apply(this, arguments);
}

function query_ibc_applications_transfer_v1_denomTraces(_x3, _x4, _x5) {
  return _query_ibc_applications_transfer_v1_denomTraces.apply(this, arguments);
}

function _query_ibc_applications_transfer_v1_denomTraces() {
  _query_ibc_applications_transfer_v1_denomTraces = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.ibc.applications.transfer.v1.denomTraces(_proto.ibc.applications.transfer.v1.QueryDenomTracesRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_ibc_applications_transfer_v1_denomTraces.apply(this, arguments);
}

function query_ibc_applications_transfer_v1_params(_x6) {
  return _query_ibc_applications_transfer_v1_params.apply(this, arguments);
}

function _query_ibc_applications_transfer_v1_params() {
  _query_ibc_applications_transfer_v1_params = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.ibc.applications.transfer.v1.params(_proto.ibc.applications.transfer.v1.QueryParamsRequest.fromPartial({}));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_ibc_applications_transfer_v1_params.apply(this, arguments);
}

function query_ibc_applications_transfer_v1_denomHash(_x7, _x8) {
  return _query_ibc_applications_transfer_v1_denomHash.apply(this, arguments);
} // Supported transaction interfaces - types/proto/ibc/applications/transfer/v1/tx.rpc.msg.d.ts
//---------------------------------------------
// IBC::BANK MODULE - TRANSACTION HELPERS
// --------------------------------------------
//MsgTransfer


function _query_ibc_applications_transfer_v1_denomHash() {
  _query_ibc_applications_transfer_v1_denomHash = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, trace) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.ibc.applications.transfer.v1.denomHash(_proto.ibc.applications.transfer.v1.QueryDenomHashRequest.fromPartial({
              trace: trace
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_ibc_applications_transfer_v1_denomHash.apply(this, arguments);
}

function execute_ibc_applications_transfer_v1_transfer(_x9, _x10, _x11, _x12, _x13, _x14, _x15) {
  return _execute_ibc_applications_transfer_v1_transfer.apply(this, arguments);
}

function _execute_ibc_applications_transfer_v1_transfer() {
  _execute_ibc_applications_transfer_v1_transfer = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(sourcePort, sourceChannel, token, sender, receiver, timeoutHeight, timeoutTimestamp) {
    var msg;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            msg = _proto.ibc.applications.transfer.v1.MsgTransfer.fromPartial({
              sourcePort: sourcePort,
              sourceChannel: sourceChannel,
              token: token,
              sender: sender,
              receiver: receiver,
              timeoutHeight: timeoutHeight,
              timeoutTimestamp: timeoutTimestamp
            });
            return _context5.abrupt("return", msg);

          case 2:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _execute_ibc_applications_transfer_v1_transfer.apply(this, arguments);
}
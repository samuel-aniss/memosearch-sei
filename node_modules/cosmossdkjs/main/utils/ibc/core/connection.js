"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_ibc_core_connection_connectionOpenAck = execute_ibc_core_connection_connectionOpenAck;
exports.execute_ibc_core_connection_connectionOpenConfirm = execute_ibc_core_connection_connectionOpenConfirm;
exports.execute_ibc_core_connection_connectionOpenInit = execute_ibc_core_connection_connectionOpenInit;
exports.execute_ibc_core_connection_connectionOpenTry = execute_ibc_core_connection_connectionOpenTry;
exports.query_ibc_core_connection_clientConnections = query_ibc_core_connection_clientConnections;
exports.query_ibc_core_connection_connection = query_ibc_core_connection_connection;
exports.query_ibc_core_connection_connectionClientState = query_ibc_core_connection_connectionClientState;
exports.query_ibc_core_connection_connectionConsensusState = query_ibc_core_connection_connectionConsensusState;
exports.query_ibc_core_connection_connections = query_ibc_core_connection_connections;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../../proto");

// Supported query interfaces - types/proto/ibc/core/connection/v1/query.rpc.query.d.ts
//---------------------------------------------
// IBC::CONNECTION MODULE - QUERY HELPERS
// --------------------------------------------
function query_ibc_core_connection_connection(_x, _x2) {
  return _query_ibc_core_connection_connection.apply(this, arguments);
}

function _query_ibc_core_connection_connection() {
  _query_ibc_core_connection_connection = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, connectionId) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.ibc.core.connection.v1.connection(_proto.ibc.core.connection.v1.QueryConnectionRequest.fromPartial({
              connectionId: connectionId
            }));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_ibc_core_connection_connection.apply(this, arguments);
}

function query_ibc_core_connection_connections(_x3, _x4, _x5) {
  return _query_ibc_core_connection_connections.apply(this, arguments);
}

function _query_ibc_core_connection_connections() {
  _query_ibc_core_connection_connections = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.ibc.core.connection.v1.connections(_proto.ibc.core.connection.v1.QueryConnectionsRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_ibc_core_connection_connections.apply(this, arguments);
}

function query_ibc_core_connection_clientConnections(_x6, _x7) {
  return _query_ibc_core_connection_clientConnections.apply(this, arguments);
}

function _query_ibc_core_connection_clientConnections() {
  _query_ibc_core_connection_clientConnections = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, clientId) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.ibc.core.connection.v1.clientConnections(_proto.ibc.core.connection.v1.QueryClientConnectionsRequest.fromPartial({
              clientId: clientId
            }));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_ibc_core_connection_clientConnections.apply(this, arguments);
}

function query_ibc_core_connection_connectionClientState(_x8, _x9) {
  return _query_ibc_core_connection_connectionClientState.apply(this, arguments);
}

function _query_ibc_core_connection_connectionClientState() {
  _query_ibc_core_connection_connectionClientState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, connectionId) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.ibc.core.connection.v1.connectionClientState(_proto.ibc.core.connection.v1.QueryConnectionClientStateRequest.fromPartial({
              connectionId: connectionId
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_ibc_core_connection_connectionClientState.apply(this, arguments);
}

function query_ibc_core_connection_connectionConsensusState(_x10, _x11, _x12, _x13) {
  return _query_ibc_core_connection_connectionConsensusState.apply(this, arguments);
} // Supported transaction interfaces - types/proto/ibc/core/connection/v1/tx.rpc.msg.d.ts
//---------------------------------------------
// IBC::CONNECTION MODULE - TRANSACTION HELPERS
// --------------------------------------------
//MsgConnectionOpenInit


function _query_ibc_core_connection_connectionConsensusState() {
  _query_ibc_core_connection_connectionConsensusState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client, connectionId, revisionNumber, revisionHeight) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.ibc.core.connection.v1.connectionConsensusState(_proto.ibc.core.connection.v1.QueryConnectionConsensusStateRequest.fromPartial({
              connectionId: connectionId,
              revisionNumber: revisionNumber,
              revisionHeight: revisionHeight
            }));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_ibc_core_connection_connectionConsensusState.apply(this, arguments);
}

function execute_ibc_core_connection_connectionOpenInit(_x14, _x15, _x16, _x17, _x18) {
  return _execute_ibc_core_connection_connectionOpenInit.apply(this, arguments);
} //MsgConnectionOpenTry


function _execute_ibc_core_connection_connectionOpenInit() {
  _execute_ibc_core_connection_connectionOpenInit = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(clientId, counterparty, version, delayPeriod, signer) {
    var msg;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            msg = _proto.ibc.core.connection.v1.MsgConnectionOpenInit.fromPartial({
              clientId: clientId,
              counterparty: counterparty,
              version: version,
              delayPeriod: delayPeriod,
              signer: signer
            });
            return _context6.abrupt("return", msg);

          case 2:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _execute_ibc_core_connection_connectionOpenInit.apply(this, arguments);
}

function execute_ibc_core_connection_connectionOpenTry(_x19) {
  return _execute_ibc_core_connection_connectionOpenTry.apply(this, arguments);
} //MsgConnectionOpenAck


function _execute_ibc_core_connection_connectionOpenTry() {
  _execute_ibc_core_connection_connectionOpenTry = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(clientId) {
    var msg;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            msg = _proto.ibc.core.connection.v1.MsgConnectionOpenTry.fromPartial({
              clientId: clientId
            });
            return _context7.abrupt("return", msg);

          case 2:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _execute_ibc_core_connection_connectionOpenTry.apply(this, arguments);
}

function execute_ibc_core_connection_connectionOpenAck(_x20, _x21, _x22, _x23, _x24) {
  return _execute_ibc_core_connection_connectionOpenAck.apply(this, arguments);
} //MsgConnectionOpenConfirm


function _execute_ibc_core_connection_connectionOpenAck() {
  _execute_ibc_core_connection_connectionOpenAck = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(connectionId, counterpartyConnectionId, version, clientState, proofHeight) {
    var msg;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            msg = _proto.ibc.core.connection.v1.MsgConnectionOpenAck.fromPartial({
              connectionId: connectionId,
              counterpartyConnectionId: counterpartyConnectionId,
              version: version,
              clientState: clientState,
              proofHeight: proofHeight
            });
            return _context8.abrupt("return", msg);

          case 2:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _execute_ibc_core_connection_connectionOpenAck.apply(this, arguments);
}

function execute_ibc_core_connection_connectionOpenConfirm(_x25, _x26, _x27, _x28) {
  return _execute_ibc_core_connection_connectionOpenConfirm.apply(this, arguments);
}

function _execute_ibc_core_connection_connectionOpenConfirm() {
  _execute_ibc_core_connection_connectionOpenConfirm = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(connectionId, proofAck, proofHeight, signer) {
    var msg;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            msg = _proto.ibc.core.connection.v1.MsgConnectionOpenConfirm.fromPartial({
              connectionId: connectionId,
              proofAck: proofAck,
              proofHeight: proofHeight,
              signer: signer
            });
            return _context9.abrupt("return", msg);

          case 2:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _execute_ibc_core_connection_connectionOpenConfirm.apply(this, arguments);
}
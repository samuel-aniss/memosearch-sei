"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.execute_ibc_core_client_createClient = execute_ibc_core_client_createClient;
exports.execute_ibc_core_client_submitMisbehaviour = execute_ibc_core_client_submitMisbehaviour;
exports.execute_ibc_core_client_updateClient = execute_ibc_core_client_updateClient;
exports.execute_ibc_core_client_upgradeClient = execute_ibc_core_client_upgradeClient;
exports.query_ibc_core_client_clientParams = query_ibc_core_client_clientParams;
exports.query_ibc_core_client_clientState = query_ibc_core_client_clientState;
exports.query_ibc_core_client_clientStates = query_ibc_core_client_clientStates;
exports.query_ibc_core_client_clientStatus = query_ibc_core_client_clientStatus;
exports.query_ibc_core_client_consensusState = query_ibc_core_client_consensusState;
exports.query_ibc_core_client_consensusStates = query_ibc_core_client_consensusStates;
exports.query_ibc_core_client_upgradedClientState = query_ibc_core_client_upgradedClientState;
exports.query_ibc_core_client_upgradedConsensusState = query_ibc_core_client_upgradedConsensusState;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _proto = require("../../../proto");

// Supported query interfaces - types/proto/ibc/core/client/v1/query.rpc.query.d.ts
//---------------------------------------------
// IBC::CLIENT MODULE - QUERY HELPERS
// --------------------------------------------
function query_ibc_core_client_clientState(_x, _x2) {
  return _query_ibc_core_client_clientState.apply(this, arguments);
}

function _query_ibc_core_client_clientState() {
  _query_ibc_core_client_clientState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(client, clientId) {
    var response;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return client.query.ibc.core.client.v1.clientState(_proto.ibc.core.client.v1.QueryClientStateRequest.fromPartial({
              clientId: clientId
            }));

          case 2:
            response = _context.sent;
            return _context.abrupt("return", response);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _query_ibc_core_client_clientState.apply(this, arguments);
}

function query_ibc_core_client_clientStates(_x3, _x4, _x5) {
  return _query_ibc_core_client_clientStates.apply(this, arguments);
}

function _query_ibc_core_client_clientStates() {
  _query_ibc_core_client_clientStates = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(client, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return client.query.ibc.core.client.v1.clientStates(_proto.ibc.core.client.v1.QueryClientStatesRequest.fromPartial({
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context2.sent;
            return _context2.abrupt("return", response);

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _query_ibc_core_client_clientStates.apply(this, arguments);
}

function query_ibc_core_client_consensusState(_x6, _x7, _x8, _x9, _x10) {
  return _query_ibc_core_client_consensusState.apply(this, arguments);
}

function _query_ibc_core_client_consensusState() {
  _query_ibc_core_client_consensusState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(client, clientId, revisionNumber, revisionHeight, latestHeight) {
    var response;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return client.query.ibc.core.client.v1.consensusState(_proto.ibc.core.client.v1.QueryConsensusStateRequest.fromPartial({
              clientId: clientId,
              revisionNumber: revisionNumber,
              revisionHeight: revisionHeight,
              latestHeight: latestHeight
            }));

          case 2:
            response = _context3.sent;
            return _context3.abrupt("return", response);

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _query_ibc_core_client_consensusState.apply(this, arguments);
}

function query_ibc_core_client_consensusStates(_x11, _x12, _x13, _x14) {
  return _query_ibc_core_client_consensusStates.apply(this, arguments);
}

function _query_ibc_core_client_consensusStates() {
  _query_ibc_core_client_consensusStates = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(client, clientId, offset, limit) {
    var response;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return client.query.ibc.core.client.v1.consensusStates(_proto.ibc.core.client.v1.QueryConsensusStatesRequest.fromPartial({
              clientId: clientId,
              pagination: _proto.cosmos.base.query.v1beta1.PageRequest.fromPartial({
                offset: offset,
                limit: limit
              })
            }));

          case 2:
            response = _context4.sent;
            return _context4.abrupt("return", response);

          case 4:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _query_ibc_core_client_consensusStates.apply(this, arguments);
}

function query_ibc_core_client_clientStatus(_x15, _x16) {
  return _query_ibc_core_client_clientStatus.apply(this, arguments);
}

function _query_ibc_core_client_clientStatus() {
  _query_ibc_core_client_clientStatus = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(client, clientId) {
    var response;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return client.query.ibc.core.client.v1.clientStatus(_proto.ibc.core.client.v1.QueryClientStatusRequest.fromPartial({
              clientId: clientId
            }));

          case 2:
            response = _context5.sent;
            return _context5.abrupt("return", response);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _query_ibc_core_client_clientStatus.apply(this, arguments);
}

function query_ibc_core_client_clientParams(_x17) {
  return _query_ibc_core_client_clientParams.apply(this, arguments);
}

function _query_ibc_core_client_clientParams() {
  _query_ibc_core_client_clientParams = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(client) {
    var response;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return client.query.ibc.core.client.v1.clientParams(_proto.ibc.core.client.v1.QueryClientParamsRequest.fromPartial({}));

          case 2:
            response = _context6.sent;
            return _context6.abrupt("return", response);

          case 4:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _query_ibc_core_client_clientParams.apply(this, arguments);
}

function query_ibc_core_client_upgradedClientState(_x18) {
  return _query_ibc_core_client_upgradedClientState.apply(this, arguments);
}

function _query_ibc_core_client_upgradedClientState() {
  _query_ibc_core_client_upgradedClientState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(client) {
    var response;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.next = 2;
            return client.query.ibc.core.client.v1.upgradedClientState(_proto.ibc.core.client.v1.QueryUpgradedClientStateRequest.fromPartial({}));

          case 2:
            response = _context7.sent;
            return _context7.abrupt("return", response);

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _query_ibc_core_client_upgradedClientState.apply(this, arguments);
}

function query_ibc_core_client_upgradedConsensusState(_x19) {
  return _query_ibc_core_client_upgradedConsensusState.apply(this, arguments);
} // Supported transaction interfaces - types/proto/ibc/core/client/v1/tx.rpc.msg.d.ts
//---------------------------------------------
// IBC::CLIENT MODULE - TRANSACTION HELPERS
// --------------------------------------------
//MsgCreateClient


function _query_ibc_core_client_upgradedConsensusState() {
  _query_ibc_core_client_upgradedConsensusState = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(client) {
    var response;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return client.query.ibc.core.client.v1.upgradedConsensusState(_proto.ibc.core.client.v1.QueryUpgradedConsensusStateRequest.fromPartial({}));

          case 2:
            response = _context8.sent;
            return _context8.abrupt("return", response);

          case 4:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _query_ibc_core_client_upgradedConsensusState.apply(this, arguments);
}

function execute_ibc_core_client_createClient(_x20, _x21, _x22) {
  return _execute_ibc_core_client_createClient.apply(this, arguments);
} //MsgUpdateClient


function _execute_ibc_core_client_createClient() {
  _execute_ibc_core_client_createClient = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee9(clientState, consensusState, signer) {
    var msg;
    return _regenerator["default"].wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            msg = _proto.ibc.core.client.v1.MsgCreateClient.fromPartial({
              clientState: clientState,
              consensusState: consensusState,
              signer: signer
            });
            return _context9.abrupt("return", msg);

          case 2:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9);
  }));
  return _execute_ibc_core_client_createClient.apply(this, arguments);
}

function execute_ibc_core_client_updateClient(_x23, _x24, _x25) {
  return _execute_ibc_core_client_updateClient.apply(this, arguments);
} //MsgUpgradeClient


function _execute_ibc_core_client_updateClient() {
  _execute_ibc_core_client_updateClient = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee10(clientId, header, signer) {
    var msg;
    return _regenerator["default"].wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            msg = _proto.ibc.core.client.v1.MsgUpdateClient.fromPartial({
              clientId: clientId,
              header: header,
              signer: signer
            });
            return _context10.abrupt("return", msg);

          case 2:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10);
  }));
  return _execute_ibc_core_client_updateClient.apply(this, arguments);
}

function execute_ibc_core_client_upgradeClient(_x26, _x27, _x28, _x29, _x30, _x31) {
  return _execute_ibc_core_client_upgradeClient.apply(this, arguments);
} //MsgSubmitMisbehaviour


function _execute_ibc_core_client_upgradeClient() {
  _execute_ibc_core_client_upgradeClient = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee11(clientId, clientState, consensusState, proofUpgradeClient, proofUpgradeConsensusState, signer) {
    var msg;
    return _regenerator["default"].wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            msg = _proto.ibc.core.client.v1.MsgUpgradeClient.fromPartial({
              clientId: clientId,
              clientState: clientState,
              consensusState: consensusState,
              proofUpgradeClient: proofUpgradeClient,
              proofUpgradeConsensusState: proofUpgradeConsensusState,
              signer: signer
            });
            return _context11.abrupt("return", msg);

          case 2:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11);
  }));
  return _execute_ibc_core_client_upgradeClient.apply(this, arguments);
}

function execute_ibc_core_client_submitMisbehaviour(_x32, _x33, _x34) {
  return _execute_ibc_core_client_submitMisbehaviour.apply(this, arguments);
}

function _execute_ibc_core_client_submitMisbehaviour() {
  _execute_ibc_core_client_submitMisbehaviour = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee12(clientId, misbehaviour, signer) {
    var msg;
    return _regenerator["default"].wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            msg = _proto.ibc.core.client.v1.MsgSubmitMisbehaviour.fromPartial({
              clientId: clientId,
              misbehaviour: misbehaviour,
              signer: signer
            });
            return _context12.abrupt("return", msg);

          case 2:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12);
  }));
  return _execute_ibc_core_client_submitMisbehaviour.apply(this, arguments);
}
import { cosmos } from "../../proto"; // Supported query interfaces - types/proto/cosmos/evidence/v1beta1/query.rpc.query.d.ts
// Supported tranasction interfaces - types/proto/cosmos/evidence/v1beta1/tx.rpc.msg.d.ts
//---------------------------------------------
// COSMOS::EVIDENCE MODULE - QUERY HELPERS
// --------------------------------------------

export async function query_cosmos_evidence_evidence(client, evidenceHash) {
  let response = await client.query.cosmos.evidence.v1beta1.evidence(cosmos.evidence.v1beta1.QueryEvidenceRequest.fromPartial({
    evidenceHash: evidenceHash
  }));
  return response;
}
export async function query_cosmos_evidence_all_evidence(client, offset, limit) {
  let response = await client.query.cosmos.evidence.v1beta1.allEvidence(cosmos.evidence.v1beta1.QueryAllEvidenceRequest.fromPartial({
    pagination: cosmos.base.query.v1beta1.PageRequest.fromPartial({
      offset: offset,
      limit: limit
    })
  }));
  return response;
} //---------------------------------------------
// COSMOS::EVIDENCE MODULE - TRANSACTION HELPERS
// --------------------------------------------
// MsgSubmitEvidence

export async function execute_cosmos_evidence_submit_evidence(submitter, evidence) {
  let msg = cosmos.evidence.v1beta1.MsgSubmitEvidence.fromPartial({
    submitter,
    evidence
  });
  return msg;
}
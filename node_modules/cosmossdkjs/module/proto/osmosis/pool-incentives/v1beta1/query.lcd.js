import { LCDClient } from "@osmonauts/lcd";
export class LCDQueryClient extends LCDClient {
  constructor({
    restEndpoint
  }) {
    super({
      restEndpoint
    });
  }
  /* GaugeIds takes the pool id and returns the matching gauge ids and durations */


  async gaugeIds(params) {
    const options = {
      params: {}
    };

    if (typeof params?.poolId !== "undefined") {
      options.params.pool_id = params.poolId;
    }

    const endpoint = `osmosis/pool-incentives/v1beta1/gauge-ids/${params.poolId}`;
    return await this.request(endpoint, options);
  }
  /* DistrInfo */


  async distrInfo(_params = {}) {
    const endpoint = `osmosis/pool-incentives/v1beta1/distr_info`;
    return await this.request(endpoint);
  }
  /* Params */


  async params(_params = {}) {
    const endpoint = `osmosis/pool-incentives/v1beta1/params`;
    return await this.request(endpoint);
  }
  /* LockableDurations */


  async lockableDurations(_params = {}) {
    const endpoint = `osmosis/pool-incentives/v1beta1/lockable_durations`;
    return await this.request(endpoint);
  }
  /* IncentivizedPools */


  async incentivizedPools(_params = {}) {
    const endpoint = `osmosis/pool-incentives/v1beta1/incentivized_pools`;
    return await this.request(endpoint);
  }
  /* ExternalIncentiveGauges */


  async externalIncentiveGauges(_params = {}) {
    const endpoint = `osmosis/pool-incentives/v1beta1/external_incentive_gauges`;
    return await this.request(endpoint);
  }

}
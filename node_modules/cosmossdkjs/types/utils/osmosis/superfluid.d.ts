import { Coin } from "../../../types/proto/cosmos/base/v1beta1/coin";
import { CosmosChainClient } from "../../clients";
export declare function query_osmosis_superfluid_params(client: CosmosChainClient): Promise<any>;
export declare function query_osmosis_superfluid_assetType(client: CosmosChainClient, denom: string): Promise<any>;
export declare function query_osmosis_superfluid_allAssets(client: CosmosChainClient): Promise<any>;
export declare function query_osmosis_superfluid_assetMultiplier(client: CosmosChainClient, denom: string): Promise<any>;
export declare function query_osmosis_superfluid_allIntermediaryAccounts(client: CosmosChainClient, offset?: number, limit?: number): Promise<any>;
export declare function query_osmosis_superfluid_connectedIntermediaryAccountr(client: CosmosChainClient, denom: string): Promise<any>;
export declare function query_osmosis_superfluid_totalSuperfluidDelegations(client: CosmosChainClient): Promise<any>;
export declare function query_osmosis_superfluid_superfluidDelegationAmount(client: CosmosChainClient, delegatorAddress: string, validatorAddress: string, denom: string): Promise<any>;
export declare function query_osmosis_superfluid_superfluidUndelegationsByDelegator(client: CosmosChainClient, delegatorAddress: string, denom: string): Promise<any>;
export declare function query_osmosis_superfluid_superfluidDelegationsByDelegator(client: CosmosChainClient, delegatorAddress: string): Promise<any>;
export declare function query_osmosis_superfluid_superfluidDelegationsByValidatorDenom(client: CosmosChainClient, validatorAddress: string, denom: string): Promise<any>;
export declare function query_osmosis_superfluid_estimateSuperfluidDelegatedAmountByValidatorDenom(client: CosmosChainClient, validatorAddress: string, denom: string): Promise<any>;
export declare function execute_osmosis_superfluid_superfluidDelegate(sender: string, lockId: number, valAddr: string): Promise<import("../../proto/osmosis/superfluid/tx").MsgSuperfluidDelegate>;
export declare function execute_osmosis_superfluid_superfluidUndelegate(sender: string, lockId: number): Promise<import("../../proto/osmosis/superfluid/tx").MsgSuperfluidUndelegate>;
export declare function execute_osmosis_superfluid_superfluidUnbondLock(sender: string, lockId: number): Promise<import("../../proto/osmosis/superfluid/tx").MsgSuperfluidUnbondLock>;
export declare function execute_osmosis_superfluid_lockAndSuperfluidDelegate(sender: string, coins: Coin[], valAddr: string): Promise<import("../../proto/osmosis/superfluid/tx").MsgLockAndSuperfluidDelegate>;
export declare function execute_osmosis_superfluid_unPoolWhitelistedPool(sender: string, poolId: number): Promise<import("../../proto/osmosis/superfluid/tx").MsgUnPoolWhitelistedPool>;

import { QueryApi } from '../../../../openapi/api';
export function channels(sdk, paginationKey, paginationOffset, paginationLimit, paginationCountTotal) {
    return new QueryApi(undefined, sdk.url).channels(paginationKey, paginationOffset?.toString(), paginationLimit?.toString(), paginationCountTotal);
}
export function channel(sdk, channelID, portID) {
    return new QueryApi(undefined, sdk.url).channel(channelID, portID);
}
export function channelClientState(sdk, channelID, portID) {
    return new QueryApi(undefined, sdk.url).channelClientState(channelID, portID);
}
export function channelConsensusState(sdk, channelID, portID, revisionNumber, revisionHeight) {
    return new QueryApi(undefined, sdk.url).channelConsensusState(channelID, portID, revisionNumber.toString(), revisionHeight.toString());
}
export function nextSequenceReceive(sdk, channelID, portID) {
    return new QueryApi(undefined, sdk.url).nextSequenceReceive(channelID, portID);
}
export function packetAcknowledgements(sdk, channelID, portID, paginationKey, paginationOffset, paginationLimit, paginationCountTotal) {
    return new QueryApi(undefined, sdk.url).packetAcknowledgements(channelID, portID, paginationKey, paginationOffset?.toString(), paginationLimit?.toString(), paginationCountTotal);
}
export function packetAcknowledgement(sdk, channelID, portID, sequence) {
    return new QueryApi(undefined, sdk.url).packetAcknowledgement(channelID, portID, sequence.toString());
}
export function packetCommitments(sdk, channelID, portID, paginationKey, paginationOffset, paginationLimit, paginationCountTotal) {
    return new QueryApi(undefined, sdk.url).packetCommitments(channelID, portID, paginationKey, paginationOffset?.toString(), paginationLimit?.toString(), paginationCountTotal);
}
export function unreceivedAcks(sdk, channelID, portID, packetAckSequences) {
    return new QueryApi(undefined, sdk.url).unreceivedAcks(channelID, portID, packetAckSequences.map((sequence) => sequence.toString()));
}
export function unreceivedPackets(sdk, channelID, portID, packetAckSequences) {
    return new QueryApi(undefined, sdk.url).unreceivedPackets(channelID, portID, packetAckSequences.map((sequence) => sequence.toString()));
}
export function packetCommitment(sdk, channelID, portID, sequence) {
    return new QueryApi(undefined, sdk.url).packetCommitment(channelID, portID, sequence.toString());
}
export function packetReceipt(sdk, channelID, portID, sequence) {
    return new QueryApi(undefined, sdk.url).packetReceipt(channelID, portID, sequence.toString());
}
export function connectionChannels(sdk, connection, paginationKey, paginationOffset, paginationLimit, paginationCountTotal) {
    return new QueryApi(undefined, sdk.url).connectionChannels(connection, paginationKey, paginationOffset?.toString(), paginationLimit?.toString(), paginationCountTotal);
}

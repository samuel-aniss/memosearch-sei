import { CosmosSDK } from '../../../../sdk';
export declare function clientConnections(sdk: CosmosSDK, clientID: string): Promise<import("axios").AxiosResponse<import("../../../../openapi/api").QueryClientConnectionsResponseIsTheResponseTypeForTheQueryClientConnectionsRPCMethod>>;
export declare function connections(sdk: CosmosSDK, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../../openapi/api").InlineResponse20080>>;
export declare function clientState(sdk: CosmosSDK, connectionID: string): Promise<import("axios").AxiosResponse<import("../../../../openapi/api").QueryConnectionClientStateResponseIsTheResponseTypeForTheQueryConnectionClientStateRPCMethod>>;
export declare function connectionConsensusState(sdk: CosmosSDK, connectionID: string, revisionNumber: bigint, revisionHeight: bigint): Promise<import("axios").AxiosResponse<import("../../../../openapi/api").QueryConnectionConsensusStateResponseIsTheResponseTypeForTheQueryConnectionConsensusStateRPCMethod>>;

import { CosmosSDK } from '../../../sdk';
import { AccAddress, ValAddress } from '../../../types';
export declare function delegatorDelegations(sdk: CosmosSDK, delegatorAddr: AccAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20059>>;
export declare function redelegations(sdk: CosmosSDK, delegatorAddr: AccAddress, srcValidatorAddr?: ValAddress, dstValidatorAddr?: ValAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20060>>;
export declare function delegatorUnbondingDelegations(sdk: CosmosSDK, delegatorAddr: AccAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20061>>;
export declare function delegatorValidators(sdk: CosmosSDK, delegatorAddr: AccAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20062>>;
export declare function delegatorValidator(sdk: CosmosSDK, validatorAddr: ValAddress, delegatorAddr: AccAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20063>>;
export declare function historicalInfo(sdk: CosmosSDK, height: bigint): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20064>>;
export declare function params(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20065>>;
export declare function pool(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20066>>;
export declare function validators(sdk: CosmosSDK, status?: string, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").QueryValidatorsResponseIsResponseTypeForTheQueryValidatorsRPCMethod>>;
export declare function validator(sdk: CosmosSDK, validatorAddr: ValAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").QueryValidatorResponseIsResponseTypeForTheQueryValidatorRPCMethod>>;
export declare function validatorDelegations(sdk: CosmosSDK, validatorAddr: ValAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").QueryValidatorDelegationsResponseIsResponseTypeForTheQueryValidatorDelegationsRPCMethod>>;
export declare function delegation(sdk: CosmosSDK, validatorAddr: ValAddress, delegatorAddr: AccAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20067>>;
export declare function unbondingDelegation(sdk: CosmosSDK, validatorAddr: ValAddress, delegatorAddr: AccAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20068>>;
export declare function validatorUnbondingDelegations(sdk: CosmosSDK, validatorAddr: ValAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20069>>;

import { CosmosSDK } from '../../../sdk';
import { AccAddress, ValAddress } from '../../../types';
export declare function communityPool(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20037>>;
export declare function delegationTotalRewards(sdk: CosmosSDK, delegatorAddress: AccAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20038>>;
export declare function delegationRewards(sdk: CosmosSDK, delegatorAddress: AccAddress, validatorAddress: ValAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").QueryValidatorDelegationsResponseIsResponseTypeForTheQueryValidatorDelegationsRPCMethod>>;
export declare function delegatorValidators(sdk: CosmosSDK, delegatorAddress: AccAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20040>>;
export declare function delegatorWithdrawAddress(sdk: CosmosSDK, delegatorAddress: AccAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20041>>;
export declare function validatorCommission(sdk: CosmosSDK, validatorAddress: ValAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").QueryValidatorCommissionResponseIsTheResponseTypeForTheQueryValidatorCommissionRPCMethod>>;
export declare function validatorOutstandingRewards(sdk: CosmosSDK, validatorAddress: ValAddress): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20043>>;
export declare function validatorSlashes(sdk: CosmosSDK, validatorAddress: ValAddress, startingHeight?: string, endingHeight?: string, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").InlineResponse20044>>;

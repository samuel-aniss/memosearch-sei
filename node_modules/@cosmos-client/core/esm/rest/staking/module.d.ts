import { CosmosSDK } from '../../sdk';
import { AccAddress, ValAddress } from '../../types';
export declare function delegatorDelegations(sdk: CosmosSDK, delegatorAddr: AccAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../openapi/api").DelegatorDelegations200Response, any>>;
export declare function redelegations(sdk: CosmosSDK, delegatorAddr: AccAddress, srcValidatorAddr?: ValAddress, dstValidatorAddr?: ValAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../openapi/api").Redelegations200Response, any>>;
export declare function delegatorUnbondingDelegations(sdk: CosmosSDK, delegatorAddr: AccAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../openapi/api").DelegatorUnbondingDelegations200Response, any>>;
export declare function delegatorValidators(sdk: CosmosSDK, delegatorAddr: AccAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../openapi/api").StakingDelegatorValidators200Response, any>>;
export declare function delegatorValidator(sdk: CosmosSDK, validatorAddr: ValAddress, delegatorAddr: AccAddress): Promise<import("axios").AxiosResponse<import("../../openapi/api").DelegatorValidator200Response, any>>;
export declare function historicalInfo(sdk: CosmosSDK, height: bigint): Promise<import("axios").AxiosResponse<import("../../openapi/api").HistoricalInfo200Response, any>>;
export declare function params(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../openapi/api").StakingParams200Response, any>>;
export declare function pool(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../openapi/api").Pool200Response, any>>;
export declare function validators(sdk: CosmosSDK, status?: string, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../openapi/api").QueryValidatorsResponseIsResponseTypeForTheQueryValidatorsRPCMethod, any>>;
export declare function validator(sdk: CosmosSDK, validatorAddr: ValAddress): Promise<import("axios").AxiosResponse<import("../../openapi/api").QueryValidatorResponseIsResponseTypeForTheQueryValidatorRPCMethod, any>>;
export declare function validatorDelegations(sdk: CosmosSDK, validatorAddr: ValAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../openapi/api").QueryValidatorDelegationsResponseIsResponseTypeForTheQueryValidatorDelegationsRPCMethod, any>>;
export declare function delegation(sdk: CosmosSDK, validatorAddr: ValAddress, delegatorAddr: AccAddress): Promise<import("axios").AxiosResponse<import("../../openapi/api").Delegation200Response, any>>;
export declare function unbondingDelegation(sdk: CosmosSDK, validatorAddr: ValAddress, delegatorAddr: AccAddress): Promise<import("axios").AxiosResponse<import("../../openapi/api").UnbondingDelegation200Response, any>>;
export declare function validatorUnbondingDelegations(sdk: CosmosSDK, validatorAddr: ValAddress, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../openapi/api").ValidatorUnbondingDelegations200Response, any>>;

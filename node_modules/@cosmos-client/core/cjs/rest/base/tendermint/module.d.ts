import { CosmosSDK } from '../../../sdk';
export declare function getBlockByHeight(sdk: CosmosSDK, height: bigint): Promise<import("axios").AxiosResponse<import("../../../openapi/api").GetBlockByHeight200Response, any>>;
export declare function getLatestBlock(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../../openapi/api").GetLatestBlock200Response, any>>;
export declare function getLatestValidatorSet(sdk: CosmosSDK, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean, paginationReverse?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").GetLatestValidatorSet200Response, any>>;
export declare function getValidatorSet(sdk: CosmosSDK, height: bigint, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").GetValidatorSetByHeight200Response, any>>;
export declare function getNodeInfo(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../../openapi/api").GetNodeInfo200Response, any>>;
export declare function getSyncing(sdk: CosmosSDK): Promise<import("axios").AxiosResponse<import("../../../openapi/api").GetSyncing200Response, any>>;
export declare function getValidatorSetByHeight(sdk: CosmosSDK, height: string, paginationKey?: string, paginationOffset?: bigint, paginationLimit?: bigint, paginationCountTotal?: boolean): Promise<import("axios").AxiosResponse<import("../../../openapi/api").GetValidatorSetByHeight200Response, any>>;

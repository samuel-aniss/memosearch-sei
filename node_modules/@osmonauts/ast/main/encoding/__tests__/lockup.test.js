"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _protoParser = require("@osmonauts/proto-parser");

var _types = require("@osmonauts/types");

var _testUtils = require("../../../test-utils/");

var _context = require("../context");

var _ = require("..");

var _object = require("../object");

var _index = require("../amino/index");

var _jestInCase = _interopRequireDefault(require("jest-in-case"));

var store = new _protoParser.ProtoStore([__dirname + '/../../../../../__fixtures__/chain1']);
store.traverseAll();
(0, _jestInCase["default"])('osmosis/lockup/tx', function (opts) {
  var ref = store.findProto('osmosis/lockup/tx.proto');
  var context = new _context.ProtoParseContext(ref, store, _types.defaultTelescopeOptions);
  var aminoCtx = new _context.AminoParseContext(ref, store, _types.defaultTelescopeOptions);
  context.options.typingsFormat.duration = opts.name;
  aminoCtx.options.typingsFormat.duration = opts.name;
  (0, _testUtils.expectCode)((0, _.createProtoType)(context, 'MsgLockTokens', (0, _protoParser.getNestedProto)(ref.traversed).MsgLockTokens));
  (0, _testUtils.expectCode)((0, _object.createObjectWithMethods)(context, 'MsgLockTokens', (0, _protoParser.getNestedProto)(ref.traversed).MsgLockTokens));
  (0, _testUtils.expectCode)((0, _index.makeAminoTypeInterface)({
    context: aminoCtx,
    proto: (0, _protoParser.getNestedProto)(ref.traversed).MsgLockTokens
  }));
  (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
    context: aminoCtx,
    root: ref.proto,
    name: 'AminoConverter',
    protos: [(0, _protoParser.getNestedProto)(ref.traversed).MsgLockTokens]
  }));
}, [{
  name: 'duration'
}, {
  name: 'string'
}]);